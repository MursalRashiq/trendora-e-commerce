<%- include("../../views/partials/admin/header") %>

<style>
  /* General Reset and Container Styling */
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f4f7fa;
    color: #333;
  }

  .content-main {
    padding: 40px 20px;
    max-width: 1400px; /* Increased max-width for better use of space */
    margin: 0 auto;
  }

  .content-header {
    margin-bottom: 30px;
  }

  .content-title {
    font-size: 2rem;
    font-weight: 600;
    color: #2c3e50;
  }

  .card {
    background-color: #fff;
    border-radius: 15px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    padding: 30px;
    width: 100%;
  }

  .card-body {
    display: flex;
    justify-content: center;
  }

  .form-container {
    width: 100%;
    max-width: 600px; /* Form width optimized for readability */
  }

  .form-label {
    font-weight: 500;
    margin-bottom: 8px;
    color: #34495e;
  }

  .form-control {
    width: 100%;
    padding: 12px;
    margin-bottom: 15px;
    border: 1px solid #ddd;
    border-radius: 8px;
    font-size: 1rem;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
  }

  .form-control:focus {
    border-color: #007bff;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.3);
    outline: none;
  }

  .error-message {
    color: #e74c3c;
    font-size: 0.9rem;
    margin-top: -10px;
    margin-bottom: 10px;
  }

  .d-grid {
    margin-top: 30px;
  }

  .btn-primary {
    background-color: #007bff;
    color: #fff;
    border: none;
    border-radius: 8px;
    padding: 12px;
    font-size: 1.1rem;
    font-weight: 500;
    width: 100%;
    cursor: pointer;
    transition: background-color 0.3s ease, transform 0.2s ease;
  }

  .btn-primary:hover {
    background-color: #0056b3;
    transform: translateY(-2px);
  }

  .btn-primary:active {
    transform: translateY(0);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .card {
      padding: 20px;
    }
    .content-title {
      font-size: 1.5rem;
    }
    .form-container {
      max-width: 100%;
    }
  }
</style>

<section class="content-main">
  <div class="content-header">
    <h2 class="content-title card-title">Edit Coupon</h2>
  </div>
  <div class="card">
    <div class="card-body">
      <div class="form-container">
        <form id="coupon-form" method="post" action="/admin/updateCoupon">
          <body onload="setDefaultStartDate(),setDefaultendDate()"></body>
          <input type="hidden" id="coupon-id" value="<%= findCoupon._id %>" />

          <div>
            <label for="coupon-name" class="form-label">Coupon Name</label>
            <input
              type="text"
              id="coupon-name"
              value="<%= findCoupon.name %>"
              name="couponName"
              placeholder="Enter coupon name"
              class="form-control"
            />
            <div id="error-coupon-name" class="error-message"></div>
          </div>

          <div>
            <label for="startingDate" class="form-label">Start Date</label>
            <input
              type="date"
              name="startDate"
              class="form-control"
              required="true"
              id="startingDate"
            />
            <div id="error-start-date" class="error-message"></div>
          </div>

          <div>
            <label for="expiringDate" class="form-label">End Date</label>
            <input
              type="date"
              name="endDate"
              class="form-control"
              id="expiringDate"
              required="true"
            />
            <div id="error-end-date" class="error-message"></div>
          </div>

          <div>
            <label for="offer-price" class="form-label">Offer Price</label>
            <input
              type="text"
              id="offer-price"
              name="offerPrice"
              placeholder="Enter offer price"
              class="form-control"
              value="<%= findCoupon.offerPrice %>"
            />
            <div id="error-offer-price" class="error-message"></div>
          </div>

          <div>
            <label for="minimum-price" class="form-label">Minimum Price</label>
            <input
              type="text"
              name="minimumPrice"
              id="minimum-price"
              placeholder="Enter minimum price"
              class="form-control"
              value="<%= findCoupon.minimumPrice %>"
            />
            <div id="error-minimum-price" class="error-message"></div>
          </div>

          <div>
            <label for="maximum-price" class="form-label">Maximum Price</label>
            <input
              type="text"
              name="minimumPrice"
              id="maximum-price"
              placeholder="Enter maximum price"
              class="form-control"
              value="<%= findCoupon.maximumPrice %>"
            />
            <div id="error-maximum-price" class="error-message"></div>
          </div>

          <div class="d-grid">
            <button type="submit" class="btn btn-primary">Update Coupon</button>
          </div>
          <div id="err-msg" class="error-message"></div>
        </form>
      </div>
    </div>
  </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function setDefaultStartDate() {
    const today = new Date();
    const year = today.getFullYear();
    let month = (today.getMonth() + 1).toString().padStart(2, "0");
    let day = today.getDate().toString().padStart(2, "0");
    document.getElementById("startingDate").value = `${year}-${month}-${day}`;
  }

  function setDefaultendDate() {
    const today = new Date();
    const tomorrow = new Date(today);
    tomorrow.setDate(today.getDate() + 1);

    const year = tomorrow.getFullYear();
    let month = (tomorrow.getMonth() + 1).toString().padStart(2, "0");
    let day = tomorrow.getDate().toString().padStart(2, "0");
    document.getElementById("expiringDate").value = `${year}-${month}-${day}`;
  }

  document.getElementById("coupon-form").addEventListener("submit", function(event) {
    event.preventDefault();
    if (validateForm()) {
      updateCoupon();
    }
  });

  function validateForm() {
    document.querySelectorAll(".error-message").forEach((element) => (element.innerHTML = ""));

    const sDate = document.getElementsByName("startDate")[0].value;
    const eDate = document.getElementsByName("endDate")[0].value;
    const sDateObj = new Date(sDate);
    const eDateObj = new Date(eDate);
    const todayDateObj = new Date();
    todayDateObj.setHours(0, 0, 0, 0);

    if (sDateObj > eDateObj) {
      document.getElementById("error-end-date").innerHTML = "End date should be after the start date";
      return false;
    }

    if (sDateObj <= todayDateObj) {
      document.getElementById("error-start-date").innerHTML = "Starting date should be greater than or equal to today's date";
      return false;
    }

    let name = document.getElementsByName("couponName")[0].value;
    const nameRegex = /^[A-Za-z0-9]{1,50}$/;

    if (!nameRegex.test(name)) {
      document.getElementById("error-coupon-name").innerHTML = "Coupon Name should only contain alphanumeric characters and be between 1 to 50 characters.";
      return false;
    }

    const offerPriceInput = document.getElementsByName("offerPrice")[0];
    const minimumPriceInput = document.getElementsByName("minimumPrice")[0];

    const offerPrice = offerPriceInput.value.trim() !== "" ? parseInt(offerPriceInput.value) : NaN;
    const minimumPrice = minimumPriceInput.value.trim() !== "" ? parseInt(minimumPriceInput.value) : NaN;

    if (isNaN(offerPrice)) {
      document.getElementById("error-offer-price").innerHTML = "Please enter a valid numeric value for Offer Price";
      return false;
    }

    if (isNaN(minimumPrice)) {
      document.getElementById("error-minimum-price").innerHTML = "Please enter a valid numeric value for Minimum Price";
      return false;
    }

    if (offerPrice < 0) {
      document.getElementById("error-offer-price").innerHTML = "Offer Price must be a positive number";
      return false;
    }

    if (minimumPrice < 0) {
      document.getElementById("error-minimum-price").innerHTML = "Minimum Price must be a positive number";
      return false;
    }

    if (offerPrice >= minimumPrice) {
      document.getElementById("error-offer-price").innerHTML = "Offer Price must be less than Minimum Price";
      return false;
    }

    // if (maximumPrice <= minimumPrice){
    //   document.getElementById("error-maximum-price").innerHTML = "maximum Price must be greater than Minimum Price"
    // }

    return true;
  }

  function updateCoupon() {
    $.ajax({
      url: "/admin/updatecoupon",
      method: "post",
      data: {
        couponId: document.getElementById("coupon-id").value,
        couponName: document.getElementById("coupon-name").value,
        startDate: document.getElementById("startingDate").value,
        endDate: document.getElementById("expiringDate").value,
        offerPrice: document.getElementById("offer-price").value,
        minimumPrice: document.getElementById("minimum-price").value,
        maximumPrice: document.getElementById("maximum-price").value
      },
      success: function(response) {
        Swal.fire({
          icon: "success",
          title: "Success",
          text: "Coupon updated successfully!",
          confirmButtonText: "OK",
        }).then(() => {
          window.location.href = "/admin/coupon";
        });
      },
      error: function(xhr, status, error) {
        Swal.fire({
          icon: "error",
          title: "Error",
          text: "Failed to update the coupon. Please try again!",
          confirmButtonText: "OK",
        });
        console.error("Error updating coupon:", error);
      },
    });
  }
</script>

<%- include("../../views/partials/admin/footer") %>