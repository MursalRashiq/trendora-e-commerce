<%- include("../../views/partials/admin/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trendora Admin Dashboard</title>

    <!-- CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <link rel="shortcut icon" type="image/x-icon" href="/assets/img/logo/logo-removebg-preview.png">

    <style>
        body {
            background-color: #eef2f7;
            font-family: 'Poppins', sans-serif;
            font-size: 1rem;
            margin: 0;
            overflow-x: hidden; /* Prevent horizontal scrolling */
            display: flex; /* Match header layout */
            min-height: 100vh;
        }

        .dashboard-container {
            flex: 1;
            margin-left: 250px; /* Match sidebar width on laptop/TV */
            width: calc(100% - 250px); /* Adjust for sidebar */
            transition: margin-left 0.3s ease, width 0.3s ease;
        }

        .main-content {
            background: #fff;
            padding: 1rem;
            width: 100%;
            overflow-x: hidden; /* Ensure no horizontal scrolling */
            padding-top: 70px; /* Match header height */
        }

        .stats-card {
            background: #ffffff;
            border-radius: 10px;
            padding: 1rem;
            text-align: center;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
        }

        .stats-card i {
            font-size: clamp(1.3rem, 4vw, 1.8rem);
            margin-bottom: 0.5rem;
        }

        .stats-card h5 {
            font-size: clamp(0.75rem, 2.5vw, 0.9rem);
            margin: 0.3125rem 0;
            color: #34495e;
        }

        .stats-card h3 {
            font-size: clamp(1.1rem, 3vw, 1.3rem);
            margin: 0;
            color: #2c3e50;
        }

        .main-content h1 {
            font-size: clamp(1.4rem, 5vw, 2rem);
            color: #2c3e50;
            text-align: center;
        }

        .chart-container {
            background: #ffffff;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            padding: 1rem;
            position: relative;
        }

        .chart-controls .form-select, .chart-controls .btn {
            font-size: clamp(0.75rem, 2.5vw, 0.9rem);
        }

        .chart-wrapper {
            position: relative;
            height: 300px;
            width: 100%;
        }

        canvas {
            width: 100% !important;
            height: 100% !important;
        }

        .top-items-section {
            min-height: 250px; /* Base height for all views */
        }

        .top-items-section h5 {
            font-size: clamp(1rem, 3vw, 1.2rem);
            color: #34495e;
            text-align: center;
        }

        .item-list {
            display: flex;
            flex-wrap: wrap;
            gap: 15px;
            justify-content: center;
            min-height: 200px; /* Ensure consistent height */
            align-items: stretch; /* Align items vertically */
        }

        .item-card {
            background: #ffffff;
            border-radius: 10px;
            padding: 12px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
            gap: 10px;
            transition: transform 0.3s ease;
            flex: 1 1 calc(33.33% - 15px); /* 3 items per row on laptop */
            max-width: 350px;
            min-width: 250px;
        }

        .item-card:hover {
            transform: translateY(-5px);
        }

        .item-image {
            width: clamp(35px, 10vw, 40px);
            height: clamp(35px, 10vw, 40px);
            object-fit: cover;
            border-radius: 5px;
        }

        .item-details {
            flex-grow: 1;
        }

        .item-details span {
            display: block;
            font-size: clamp(0.7rem, 2vw, 0.85rem);
            color: #2c3e50;
        }

        .missing-data {
            color: #e74c3c;
            font-style: italic;
        }

        /* Mobile View Adjustments */
        @media (max-width: 768px) {
            .dashboard-container {
                margin-left: 70px; /* Match minimized sidebar width */
                width: calc(100% - 70px); /* Adjust for mobile sidebar */
                position: relative; /* Ensure it stays flush */
                left: 0; /* Remove any offset */
            }
            .main-content {
                padding: 0.75rem;
            }
            .stats-card {
                padding: 0.75rem;
            }
            .chart-container {
                padding: 0.75rem;
            }
            .top-items-section {
                min-height: 300px; /* Increased height on mobile */
            }
            .item-list {
                flex-direction: column; /* Stack vertically */
                align-items: center; /* Center items */
                min-height: 250px; /* Increased height for mobile */
            }
            .item-card {
                flex: 1 1 100%; /* 1 item per row */
                max-width: 100%;
                min-width: 0; /* Prevent overflow */
                width: 100%; /* Full width within container */
            }
        }

        @media (max-width: 576px) {
            .main-content {
                padding: 0.5rem;
            }
            .stats-card {
                padding: 0.5rem;
            }
            .chart-container {
                padding: 0.5rem;
            }
            .item-card {
                padding: 8px;
            }
        }

        /* TV View (Large Screens) */
        @media (min-width: 1200px) {
            .main-content {
                padding: 1.5rem;
            }
            .item-card {
                flex: 1 1 calc(25% - 15px); /* 4 items per row on TV */
                max-width: 300px;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Main Content -->
        <div class="main-content">
            <!-- Dashboard Insights -->
            <div class="row g-3 mb-4">
                <div class="col-12 col-md-4">
                    <div class="stats-card">
                        <i class="fas fa-shopping-cart text-primary"></i>
                        <h5>Total Orders</h5>
                        <h3><%= totalOrders.toLocaleString() %></h3>
                    </div>
                </div>
                <div class="col-12 col-md-4">
                    <div class="stats-card">
                        <i class="fas fa-users text-success"></i>
                        <h5>Total Users</h5>
                        <h3><%= totalUsers.toLocaleString() %></h3>
                    </div>
                </div>
                <div class="col-12 col-md-4">
                    <div class="stats-card">
                        <i class="fas fa-dollar-sign text-warning"></i>
                        <h5>Total Revenue</h5>
                        <h3>â‚¹<%= totalRevenue.toLocaleString('en-IN', { maximumFractionDigits: 2, minimumFractionDigits: 2 }) %></h3>
                    </div>
                </div>
            </div>

            <h1 class="mb-4">Trendora Admin Dashboard</h1>

            <!-- Chart Section -->
            <div class="chart-container mb-4">
                <h5 class="mb-3">Order Statistics</h5>
                <div class="chart-controls d-flex flex-column flex-md-row gap-2 mb-3 justify-content-between align-items-md-center">
                    <select id="timeFilter" class="form-select w-100 w-md-auto">
                        <option value="yearly">Yearly</option>
                        <option value="monthly">Monthly</option>
                        <option value="weekly">Weekly</option>
                    </select>
                    <div class="d-flex gap-2 flex-wrap">
                        <button class="btn btn-outline-secondary" onclick="changeChartType('bar')">Bar</button>
                        <button class="btn btn-outline-secondary" onclick="changeChartType('pie')">Pie</button>
                        <button class="btn btn-outline-secondary" onclick="changeChartType('line')">Line</button>
                    </div>
                </div>
                <div class="chart-wrapper">
                    <canvas id="orderChart"></canvas>
                </div>
            </div>

            <!-- Top Selling Products -->
            <div class="top-items-section mb-4">
                <h5 class="mb-3">Top 5 Selling Products</h5>
                <div class="item-list">
                    <% 
                        const filledProducts = [...topProducts];
                        while (filledProducts.length < 5) {
                            filledProducts.push({ name: `No product data #${filledProducts.length + 1}`, count: 0, image: '/assets/img/default-product.jpg' });
                        }
                        filledProducts.slice(0, 5).forEach((item, index) => {
                            const name = item.name || 'Name not available';
                            const className = !item.name ? 'missing-data' : '';
                            const image = item.image || '/assets/img/default-product.jpg';
                    %>
                        <div class="item-card">
                            <img src="<%= image %>" alt="<%= name %>" class="item-image">
                            <div class="item-details">
                                <span><%= index + 1 %>. <%= name %></span>
                                <span><%= item.count %> sold</span>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>

            <!-- Top Selling Brands -->
            <div class="top-items-section mb-4">
                <h5 class="mb-3">Top 5 Selling Brands</h5>
                <div class="item-list">
                    <% 
                        const filledBrands = [...topBrands];
                        while (filledBrands.length < 5) {
                            filledBrands.push({ name: `No brand data #${filledBrands.length + 1}`, count: 0 });
                        }
                        filledBrands.slice(0, 5).forEach((item, index) => {
                            const name = item.name || 'Name not available';
                            const className = !item.name ? 'missing-data' : '';
                    %>
                        <div class="item-card">
                            <div class="item-details">
                                <span><%= index + 1 %>. <%= name %></span>
                                <span><%= item.count %> sold</span>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>

            <!-- Top Selling Categories -->
            <div class="top-items-section mb-4">
                <h5 class="mb-3">Top 5 Selling Categories</h5>
                <div class="item-list">
                    <% 
                        const filledCategories = [...topCategories];
                        while (filledCategories.length < 5) {
                            filledCategories.push({ name: `No category data #${filledCategories.length + 1}`, count: 0 });
                        }
                        filledCategories.slice(0, 5).forEach((item, index) => {
                            const name = item.name || 'Name not available';
                            const className = !item.name ? 'missing-data' : '';
                    %>
                        <div class="item-card">
                            <div class="item-details">
                                <span><%= index + 1 %>. <%= name %></span>
                                <span><%= item.count %> sold</span>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        const ctx = document.getElementById('orderChart').getContext('2d');
        let chart;

        async function updateChart(filter, type = 'bar') {
            try {
                const response = await fetch(`/admin/chart-data?filter=${filter}`);
                if (!response.ok) throw new Error('Failed to fetch chart data');
                const data = await response.json();
                console.log('Chart Data:', data);

                if (chart) chart.destroy();

                const colors = [
                    'rgba(54, 162, 235, 0.8)', 'rgba(255, 99, 132, 0.8)',
                    'rgba(75, 192, 192, 0.8)', 'rgba(255, 159, 64, 0.8)',
                    'rgba(153, 102, 255, 0.8)', 'rgba(255, 205, 86, 0.8)'
                ];

                chart = new Chart(ctx, {
                    type: type,
                    data: {
                        labels: data.labels || ['No Data'],
                        datasets: [{
                            label: `Orders (${filter})`,
                            data: data.values || [0],
                            backgroundColor: colors.slice(0, data.labels?.length || 1),
                            borderColor: colors.slice(0, data.labels?.length || 1).map(color => 
                                color.replace('0.8', '1')
                            ),
                            borderWidth: 2,
                            borderRadius: type === 'bar' ? 5 : 0,
                            barThickness: type === 'bar' ? 'flex' : undefined
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        animation: {
                            duration: 1000,
                            easing: 'easeOutQuart'
                        },
                        plugins: {
                            legend: { 
                                position: 'top', 
                                labels: { font: { size: clamp(12, 2, 14) } } 
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                titleFont: { size: clamp(14, 3, 16) },
                                bodyFont: { size: clamp(12, 2.5, 14) },
                                padding: 10
                            },
                            title: {
                                display: true,
                                text: `Order Distribution - ${filter.charAt(0).toUpperCase() + filter.slice(1)}`,
                                font: { size: clamp(14, 3, 16) },
                                padding: 15
                            }
                        },
                        scales: type !== 'pie' ? {
                            y: { 
                                beginAtZero: true, 
                                grid: { color: 'rgba(0, 0, 0, 0.05)' }, 
                                title: { display: true, text: 'Orders', font: { size: clamp(10, 2, 12) } }
                            },
                            x: { 
                                grid: { display: false }, 
                                title: { display: true, text: 'Categories', font: { size: clamp(10, 2, 12) } }
                            }
                        } : {}
                    }
                });
            } catch (error) {
                console.error('Error fetching/updating chart:', error);
                ctx.parentNode.innerHTML = `<div style="color: red; padding: 20px; text-align: center;">Error loading chart: ${error.message}</div>`;
            }
        }

        function changeChartType(type) {
            const currentFilter = document.getElementById('timeFilter').value;
            updateChart(currentFilter, type);
        }

        // Initial chart load
        updateChart('yearly');

        // Event listener for filter change
        document.getElementById('timeFilter').addEventListener('change', (e) => {
            updateChart(e.target.value);
        });

        // Simple clamp function for older browsers
        function clamp(min, val, max) {
            return Math.min(Math.max(val, min), max);
        }
    </script>
</body>
</html>
<%- include("../../views/partials/admin/footer") %>