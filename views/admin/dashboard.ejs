<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trendora Admin Dashboard</title>

    <!-- CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <link rel="shortcut icon" type="image/x-icon" href="/assets/img/logo/logo-removebg-preview.png">
    <%- include("../../views/partials/admin/header")%>
    <style>
        body {
            background-color: #eef2f7;
            font-family: 'Poppins', sans-serif;
            margin: 0; /* Ensure no default body margin */
        }
        .dashboard-container {
            min-height: 100vh;
            width: 100%; /* Full width */
        }
        .main-content {
            padding: 30px;
            background: #fff;
            width: 100%; /* Explicitly full width */
            margin: 0; /* No margins to ensure no leftover space */
        }
        .insights-row {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
        }
        .stats-card {
            flex: 1;
            background: #ffffff;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }
        .stats-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.15);
        }
        .stats-card i {
            font-size: 1.8rem;
            margin-bottom: 8px;
        }
        .stats-card h5 {
            font-size: 0.9rem;
            margin: 5px 0;
            color: #34495e;
        }
        .stats-card h3 {
            font-size: 1.3rem;
            margin: 0;
            color: #2c3e50;
        }
        .main-content h1 {
            font-size: 2rem;
            color: #2c3e50;
            margin-bottom: 20px;
        }
        .chart-container {
            background: #ffffff;
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            max-width: 800px;
        }
        .chart-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }
        .chart-controls select, .chart-controls button {
            padding: 6px 12px;
            border-radius: 5px;
            border: 1px solid #ddd;
            cursor: pointer;
            background: #f8f9fa;
            transition: background 0.3s;
        }
        .chart-controls button:hover {
            background: #e9ecef;
        }
        canvas {
            max-height: 300px;
            width: 100%;
        }
        .top-items-section {
            margin-bottom: 30px;
        }
        .top-items-section h5 {
            font-size: 1.2rem;
            color: #34495e;
            margin-bottom: 15px;
        }
        .horizontal-list {
            display: flex;
            gap: 15px;
            overflow-x: auto;
            padding-bottom: 10px;
        }
        .horizontal-list::-webkit-scrollbar {
            height: 8px;
        }
        .horizontal-list::-webkit-scrollbar-thumb {
            background: #bdc3c7;
            border-radius: 4px;
        }
        .item-card {
            background: #ffffff;
            border-radius: 10px;
            padding: 12px;
            min-width: 180px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
            gap: 10px;
            transition: transform 0.3s ease;
        }
        .item-card:hover {
            transform: translateY(-5px);
        }
        .item-image {
            width: 40px;
            height: 40px;
            object-fit: cover;
            border-radius: 5px;
        }
        .item-details {
            flex-grow: 1;
        }
        .item-details span {
            display: block;
            font-size: 0.85rem;
            color: #2c3e50;
        }
        .missing-data {
            color: #e74c3c;
            font-style: italic;
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Main Content -->
        <div class="main-content">
            <!-- Dashboard Insights -->
            <div class="insights-row">
                <div class="stats-card">
                    <i class="fas fa-shopping-cart text-primary"></i>
                    <h5>Total Orders</h5>
                    <h3><%= totalOrders.toLocaleString() %></h3>
                </div>
                <div class="stats-card">
                    <i class="fas fa-users text-success"></i>
                    <h5>Total Users</h5>
                    <h3><%= totalUsers.toLocaleString() %></h3>
                </div>
                <div class="stats-card">
                    <i class="fas fa-dollar-sign text-warning"></i>
                    <h5>Total Revenue</h5>
                    <h3>â‚¹<%= totalRevenue.toLocaleString('en-IN', { maximumFractionDigits: 2, minimumFractionDigits: 2 }) %></h3>
                </div>
            </div>

            <h1>Trendora Admin Dashboard</h1>

            <!-- Chart Section -->
            <div class="chart-container">
                <h5>Order Statistics</h5>
                <div class="chart-controls">
                    <select id="timeFilter">
                        <option value="yearly">Yearly</option>
                        <option value="monthly">Monthly</option>
                        <option value="weekly">Weekly</option>
                    </select>
                    <div class="type-buttons">
                        <button onclick="changeChartType('bar')">Bar</button>
                        <button onclick="changeChartType('pie')">Pie</button>
                        <button onclick="changeChartType('line')">Line</button>
                    </div>
                </div>
                <canvas id="orderChart"></canvas>
            </div>

            <!-- Top Selling Products -->
            <div class="top-items-section">
                <h5>Top 5 Selling Products</h5>
                <div class="horizontal-list">
                    <% 
                        const filledProducts = [...topProducts];
                        while (filledProducts.length < 5) {
                            filledProducts.push({ name: `No product data #${filledProducts.length + 1}`, count: 0, image: '/assets/img/default-product.jpg' });
                        }
                        filledProducts.slice(0, 5).forEach((item, index) => {
                            const name = item.name || 'Name not available';
                            const className = !item.name ? 'missing-data' : '';
                            const image = item.image || '/assets/img/default-product.jpg';
                    %>
                        <div class="item-card">
                            <img src="<%= image %>" alt="<%= name %>" class="item-image">
                            <div class="item-details">
                                <span><%= index + 1 %>. <%= name %></span>
                                <span><%= item.count %> sold</span>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>

            <!-- Top Selling Brands -->
            <div class="top-items-section">
                <h5>Top 5 Selling Brands</h5>
                <div class="horizontal-list">
                    <% 
                        const filledBrands = [...topBrands];
                        while (filledBrands.length < 5) {
                            filledBrands.push({ name: `No brand data #${filledBrands.length + 1}`, count: 0 });
                        }
                        filledBrands.slice(0, 5).forEach((item, index) => {
                            const name = item.name || 'Name not available';
                            const className = !item.name ? 'missing-data' : '';
                    %>
                        <div class="item-card">
                            <div class="item-details">
                                <span><%= index + 1 %>. <%= name %></span>
                                <span><%= item.count %> sold</span>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>

            <!-- Top Selling Categories -->
            <div class="top-items-section">
                <h5>Top 5 Selling Categories</h5>
                <div class="horizontal-list">
                    <% 
                        const filledCategories = [...topCategories];
                        while (filledCategories.length < 5) {
                            filledCategories.push({ name: `No category data #${filledCategories.length + 1}`, count: 0 });
                        }
                        filledCategories.slice(0, 5).forEach((item, index) => {
                            const name = item.name || 'Name not available';
                            const className = !item.name ? 'missing-data' : '';
                    %>
                        <div class="item-card">
                            <div class="item-details">
                                <span><%= index + 1 %>. <%= name %></span>
                                <span><%= item.count %> sold</span>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function confirmLogout() {
            Swal.fire({
                title: 'Are you sure?',
                text: "You will be logged out of your session.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, logout'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/admin/logout';
                }
            });
        }

        const ctx = document.getElementById('orderChart').getContext('2d');
        let chart;

        async function updateChart(filter, type = 'bar') {
            try {
                console.log("Chart.js version:", Chart.version);
                const response = await fetch(`/admin/chart-data?filter=${filter}`);
                const data = await response.json();
                console.log("Fetched Chart Data:", data);

                if (chart) chart.destroy();

                const colors = [
                    'rgba(54, 162, 235, 0.8)', 'rgba(255, 99, 132, 0.8)',
                    'rgba(75, 192, 192, 0.8)', 'rgba(255, 159, 64, 0.8)',
                    'rgba(153, 102, 255, 0.8)', 'rgba(255, 205, 86, 0.8)'
                ];

                chart = new Chart(ctx, {
                    type: type,
                    data: {
                        labels: data.labels,
                        datasets: [{
                            label: `Orders (${filter})`,
                            data: data.values,
                            backgroundColor: colors.slice(0, data.labels.length),
                            borderColor: colors.slice(0, data.labels.length).map(color => 
                                color.replace('0.8', '1')
                            ),
                            borderWidth: 2,
                            borderRadius: type === 'bar' ? 5 : 0,
                            barThickness: type === 'bar' ? 'flex' : undefined
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        animation: {
                            duration: 1000,
                            easing: 'easeOutQuart'
                        },
                        plugins: {
                            legend: { 
                                position: 'top',
                                labels: { font: { size: 14 } }
                            },
                            tooltip: {
                                backgroundColor: 'rgba(0, 0, 0, 0.8)',
                                titleFont: { size: 16 },
                                bodyFont: { size: 14 },
                                padding: 10
                            },
                            title: {
                                display: true,
                                text: `Order Distribution - ${filter.charAt(0).toUpperCase() + filter.slice(1)}`,
                                font: { size: 16 },
                                padding: 15
                            }
                        },
                        scales: type !== 'pie' ? {
                            y: {
                                beginAtZero: true,
                                grid: { color: 'rgba(0, 0, 0, 0.05)' },
                                title: { display: true, text: 'Orders', font: { size: 12 } }
                            },
                            x: {
                                grid: { display: false },
                                title: { display: true, text: 'Categories', font: { size: 12 } }
                            }
                        } : {}
                    }
                });
            } catch (error) {
                console.error('Error fetching/updating chart:', error);
                ctx.canvas.parentNode.innerHTML = 
                    `<div style="color: red; padding: 20px;">Error loading chart: ${error.message}</div>`;
            }
        }

        function changeChartType(type) {
            const currentFilter = document.getElementById('timeFilter').value;
            updateChart(currentFilter, type);
        }

        // Initial chart load
        updateChart('yearly');

        // Event listeners
        document.getElementById('timeFilter').addEventListener('change', (e) => {
            updateChart(e.target.value);
        });
    </script>
</body>
</html>
<%- include("../../views/partials/admin/footer")%>