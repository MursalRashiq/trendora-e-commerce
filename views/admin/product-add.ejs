<%- include("../../views/partials/admin/header") %>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add New Product - Trendora Admin</title>
    

    <!-- CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/cropperjs/cropper.min.css">
    <link rel="shortcut icon" type="image/x-icon" href="/assets/img/logo/logo-removebg-preview.png">

    <style>
        body {
            background-color: #eef2f7;
            font-family: 'Poppins', sans-serif;
            margin: 0;
            overflow-x: hidden; /* Prevent horizontal scrolling */
            display: flex; /* Match header layout */
            min-height: 100vh;
        }

        .dashboard-container {
            flex: 1;
            margin-left: 250px; /* Match sidebar width on laptop/TV */
            width: calc(100% - 250px); /* Adjust for sidebar */
            transition: margin-left 0.3s ease, width 0.3s ease;
        }

        .main-content {
            background: #fff;
            padding: clamp(1rem, 3vw, 2rem); /* Responsive padding */
            width: 100%;
            overflow-x: hidden; /* Ensure no horizontal scrolling */
            padding-top: 70px; /* Match header height */
        }

        .content-title {
            font-size: clamp(1.5rem, 5vw, 2rem); /* Responsive font */
            color: #2c3e50;
            margin-bottom: clamp(1.5rem, 4vw, 2rem);
            font-weight: 600;
            text-align: center;
        }

        .card {
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            padding: clamp(1rem, 2vw, 1.5rem); /* Responsive padding */
            margin-bottom: 1.5rem;
            overflow: hidden;
        }

        .card-header {
            padding: clamp(0.75rem, 2vw, 1rem);
            border-bottom: 1px solid #eee;
            background-color: #f8f9fa;
        }

        .card-header h4 {
            margin: 0;
            font-size: clamp(1.25rem, 3vw, 1.5rem); /* Responsive font */
            font-weight: 600;
            color: #34495e;
        }

        .form-label {
            font-size: clamp(0.85rem, 2.5vw, 1rem); /* Responsive font */
            font-weight: 500;
            color: #34495e;
            margin-bottom: 0.5rem;
        }

        .form-control, .form-select {
            width: 100%;
            padding: clamp(6px, 1.5vw, 8px); /* Responsive padding */
            margin-bottom: 1rem;
            border: 1px solid #ced4da;
            border-radius: 5px;
            font-size: clamp(0.85rem, 2.5vw, 1rem); /* Responsive font */
            transition: border-color 0.3s ease;
        }

        .form-control:focus, .form-select:focus {
            border-color: #1abc9c;
            box-shadow: 0 0 5px rgba(26, 188, 156, 0.5);
            outline: none;
        }

        textarea.form-control {
            resize: vertical;
            min-height: 100px;
        }

        .error-message {
            color: #e74c3c;
            font-size: clamp(0.75rem, 2vw, 0.9rem); /* Responsive font */
            margin-top: -0.5rem;
            margin-bottom: 0.75rem;
            font-weight: 500;
        }

        .image-upload-container {
            width: 100%;
            display: flex;
            flex-direction: column;
            gap: clamp(1rem, 2vw, 1.5rem); /* Responsive gap */
        }

        .image-upload-row {
            display: flex;
            gap: clamp(1rem, 2vw, 1.5rem);
            align-items: flex-start;
            flex-wrap: wrap;
        }

        .image-card {
            border: 2px dashed #e2e8f0;
            padding: clamp(0.75rem, 2vw, 1rem);
            border-radius: 10px;
            background: #fafafa;
            width: 100%;
            max-width: 250px;
            text-align: center;
            transition: border-color 0.3s ease;
        }

        .image-card:hover {
            border-color: #1abc9c;
        }

        .image-card img {
            max-width: 100%;
            height: auto;
            border-radius: 5px;
            margin-bottom: 0.75rem;
        }

        .image-cropper {
            display: none;
            flex-direction: column;
            align-items: center;
            width: 250px;
            height: 250px;
            margin: 0 auto;
            border: 2px solid #e2e8f0;
            padding: clamp(0.75rem, 2vw, 1rem);
            border-radius: 10px;
            background: #fff;
        }

        .btn {
            padding: clamp(6px, 1.5vw, 8px) clamp(12px, 2vw, 15px); /* Responsive padding */
            border-radius: 5px;
            font-weight: 600;
            font-size: clamp(0.85rem, 2vw, 1rem); /* Responsive font */
            cursor: pointer;
            transition: all 0.3s ease;
            border: none;
        }

        .btn-primary {
            background: #1abc9c;
            color: #fff;
        }

        .btn-primary:hover {
            background: #16a085;
            transform: scale(1.05);
        }

        .btn-primary:active {
            background: #138d75;
            transform: scale(0.95);
        }

        .btn-publish {
            background: #1abc9c;
            color: #fff;
            padding: clamp(10px, 2.5vw, 12px) clamp(20px, 3vw, 24px);
            font-size: clamp(1rem, 2.5vw, 1.1rem);
            width: 100%;
            max-width: 300px;
        }

        .btn-publish:hover {
            background: #16a085;
            transform: scale(1.05);
        }

        .btn-sm {
            padding: clamp(4px, 1vw, 6px) clamp(8px, 1.5vw, 10px);
            font-size: clamp(0.75rem, 2vw, 0.85rem);
        }

        /* Responsive Adjustments */
        @media (max-width: 768px) {
            .dashboard-container {
                margin-left: 70px; /* Match minimized sidebar width */
                width: calc(100% - 70px); /* Adjust for mobile sidebar */
                position: relative;
                left: 0;
            }
            .main-content {
                padding: 1rem;
            }
            .image-upload-row {
                flex-direction: column;
                gap: 1rem;
            }
            .image-card, .image-cropper {
                max-width: 100%;
                width: 100%;
            }
            .form-control, .form-select, .btn {
                font-size: clamp(0.75rem, 2vw, 0.85rem);
            }
            .card-header h4 {
                font-size: clamp(1rem, 2.5vw, 1.25rem);
            }
        }

        @media (max-width: 576px) {
            .main-content {
                padding: 0.75rem;
            }
            .content-title {
                text-align: left;
            }
            .card {
                padding: 0.75rem;
            }
            .form-control, .form-select, .btn {
                font-size: clamp(0.65rem, 1.8vw, 0.8rem);
            }
            .btn-publish {
                padding: clamp(8px, 2vw, 10px) clamp(15px, 2.5vw, 20px);
            }
        }

        @media (min-width: 1200px) {
            .main-content {
                padding: 5.5rem;
            }
            .content-title {
                font-size: 2.2rem;
            }
            .image-card, .image-cropper {
                max-width: 300px;
            }
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <div class="main-content">
            <h2 class="content-title">Add New Product</h2>
            <div class="card">
                <div class="card-body">
                    <form method="POST" action="/admin/addProducts" enctype="multipart/form-data" id="productForm">
                        <!-- Product Name -->
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Product Name</label>
                            <input type="text" placeholder="Enter product name" name="productName" class="form-control" id="product_name" required>
                            <div id="productName-error" class="error-message"></div>
                        </div>

                        <!-- Brand and Category Row -->
                        <div class="row">
                            <div class="col-lg-6 mb-4">
                                <label class="form-label">Brand</label>
                                <select class="form-select" name="brand" required>
                                    <% if (brand && brand.length > 0) { %>
                                        <% for (let i = 0; i < brand.length; i++) { %>
                                            <option value="<%= brand[i].brandName %>"><%= brand[i].brandName %></option>
                                        <% } %>
                                    <% } else { %>
                                        <option disabled>No brands available</option>
                                    <% } %>
                                </select>
                                <div id="brand-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-6 mb-4">
                                <label class="form-label">Category</label>
                                <select class="form-select" name="category" required>
                                    <% for (let i = 0; i < cat.length; i++) { %>
                                        <option value="<%= cat[i].name %>"><%= cat[i].name %></option>
                                    <% } %>
                                </select>
                                <div id="category-error" class="error-message"></div>
                            </div>
                        </div>

                        <!-- Description -->
                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea placeholder="Enter product description" id="descriptionid" name="description" class="form-control" rows="4" required></textarea>
                            <div id="description-error" class="error-message"></div>
                        </div>

                        <!-- Prices and Quantity Row -->
                        <div class="row">
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Regular Price (₹)</label>
                                <input type="number" step="0.01" min="0" name="regularPrice" class="form-control" required>
                                <div id="regularPrice-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Sale Price (₹)</label>
                                <input type="number" step="0.01" min="0" name="salePrice" class="form-control">
                                <div id="salePrice-error" class="error-message"></div>
                            </div>
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Quantity</label>
                                <input type="number" min="0" name="quantity" class="form-control" required>
                                <div id="quantity-error" class="error-message"></div>
                            </div>
                        </div>

                        <!-- Color -->
                        <div class="row">
                            <div class="col-lg-4 mb-4">
                                <label class="form-label">Color</label>
                                <input name="color" type="text" class="form-control" required>
                                <div id="color-error" class="error-message"></div>
                            </div>
                        </div>

                        <!-- Image Upload Section -->
                        <div class="card mb-4">
                            <div class="card-header">
                                <h4>Product Images</h4>
                            </div>
                            <div class="card-body">
                                <div class="image-upload-container">
                                    <% for(let i = 1; i <= 4; i++) { %>
                                        <div class="image-upload-row">
                                            <div class="image-card">
                                                <img src="" alt="Preview" id="imgView<%= i %>">
                                                <input class="form-control mt-2" type="file" name="images" id="input<%= i %>"
                                                       accept="image/png, image/jpeg, image/jpg"
                                                       onchange="viewImage(event, <%= i %>)"
                                                       <%= i === 1 ? 'required' : '' %>>
                                            </div>
                                            <div class="image-cropper" id="cropperContainer<%= i %>">
                                                <img src="" id="croppedImg<%= i %>" alt="Cropped Image">
                                                <button type="button" id="saveButton<%= i %>" class="btn btn-primary btn-sm mt-2">Save Crop</button>
                                            </div>
                                        </div>
                                    <% } %>
                                </div>
                                <div id="images-error" class="error-message"></div>
                            </div>
                        </div>

                        <!-- Publish Button -->
                        <div class="text-center mt-4">
                            <button class="btn btn-publish" type="submit" onclick="confirmAddProduct()">Publish Product</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="/assets/cropperjs/cropper.min.js"></script>
    <script>
        let croppers = {};
        let croppedDataUrls = {};

        const CONFIG = {
            maxSizeMB: 5,
            allowedTypes: ['image/jpeg', 'image/jpg', 'image/png'],
            maxWidth: 600,
            maxHeight: 600
        };

        function validateFile(file) {
            const imagesError = document.getElementById('images-error');
            imagesError.textContent = '';
            if (!file) return { valid: false, message: 'No file selected.' };
            if (!CONFIG.allowedTypes.includes(file.type)) {
                return { valid: false, message: 'Only JPG, JPEG, or PNG images are allowed.' };
            }
            if (file.size > CONFIG.maxSizeMB * 1024 * 1024) {
                return { valid: false, message: `File size must be under ${CONFIG.maxSizeMB}MB.` };
           ania: hidden;
            }
            return { valid: true };
        }

        function showError(message) {
            const imagesError = document.getElementById('images-error');
            imagesError.textContent = message;
            imagesError.style.display = 'block';
        }

        function viewImage(event, index) {
            const input = event.target;
            const file = input.files[0];
            const validation = validateFile(file);
            if (!validation.valid) {
                showError(validation.message);
                resetImage(index);
                return;
            }

            const reader = new FileReader();
            reader.onload = function() {
                const image = document.getElementById(`imgView${index}`);
                const croppedImg = document.getElementById(`croppedImg${index}`);
                const cropperContainer = document.getElementById(`cropperContainer${index}`);
                
                croppedImg.src = '';
                image.src = reader.result;
                
                if (croppers[index]) croppers[index].destroy();
                
                croppers[index] = new Cropper(image, {
                    aspectRatio: 1,
                    viewMode: 1,
                    guides: true,
                    background: false,
                    autoCropArea: 0.8,
                    zoomable: true,
                    ready() {
                        cropperContainer.style.display = 'flex';
                    }
                });

                document.getElementById(`saveButton${index}`).onclick = async function() {
                    try {
                        const croppedCanvas = croppers[index].getCroppedCanvas({
                            width: CONFIG.maxWidth,
                            height: CONFIG.maxHeight,
                            imageSmoothingEnabled: true,
                            imageSmoothingQuality: 'high',
                        });

                        if (!croppedCanvas) throw new Error('Could not crop image');
                        const blob = await new Promise(resolve => croppedCanvas.toBlob(resolve, 'image/jpeg', 0.9));
                        if (blob.size > CONFIG.maxSizeMB * 1024 * 1024) {
                            throw new Error(`Cropped image size exceeds ${CONFIG.maxSizeMB}MB`);
                        }

                        const fileName = `cropped-img-${Date.now()}-${index}.jpg`;
                        const croppedFile = new File([blob], fileName, { type: 'image/jpeg' });
                        const dataUrl = croppedCanvas.toDataURL('image/jpeg', 0.9);
                        croppedDataUrls[index] = dataUrl;

                        croppedImg.src = dataUrl;
                        croppedImg.style.display = 'block';
                        croppedImg.style.maxWidth = '100%';
                        croppedImg.style.height = 'auto';

                        const dataTransfer = new DataTransfer();
                        dataTransfer.items.add(croppedFile);
                        document.getElementById(`input${index}`).files = dataTransfer.files;

                        image.style.display = 'none';
                        croppers[index].destroy();
                        croppers[index] = null;
                        cropperContainer.style.display = 'flex';
                        document.getElementById(`saveButton${index}`).style.display = 'none';

                        const resetButton = document.createElement('button');
                        resetButton.textContent = 'Reset Image';
                        resetButton.className = 'btn btn-primary btn-sm mt-2';
                        resetButton.onclick = () => resetImage(index);
                        cropperContainer.appendChild(resetButton);
                    } catch (error) {
                        showError(error.message || 'Error processing image.');
                        resetImage(index);
                    }
                };
            };
            reader.readAsDataURL(file);
        }

        function resetImage(index) {
            const image = document.getElementById(`imgView${index}`);
            const croppedImg = document.getElementById(`croppedImg${index}`);
            const cropperContainer = document.getElementById(`cropperContainer${index}`);
            const input = document.getElementById(`input${index}`);

            image.src = '';
            image.style.display = 'block';
            croppedImg.src = '';
            croppedImg.style.display = 'none';
            cropperContainer.style.display = 'none';
            input.value = '';

            const resetButton = cropperContainer.querySelector('.btn-primary');
            if (resetButton) resetButton.remove();
            document.getElementById(`saveButton${index}`).style.display = 'block';

            delete croppedDataUrls[index];
            if (croppers[index]) {
                croppers[index].destroy();
                croppers[index] = null;
            }
        }

        const regularPriceInput = document.querySelector('input[name="regularPrice"]');
        const salePriceInput = document.querySelector('input[name="salePrice"]');
        const salePriceError = document.getElementById('salePrice-error');

        function validatePrices() {
            const regularPrice = parseFloat(regularPriceInput.value) || 0;
            const salePrice = parseFloat(salePriceInput.value) || 0;
            salePriceError.textContent = '';
            if (salePrice > regularPrice && salePrice > 0) {
                salePriceError.textContent = 'Sale price cannot be greater than regular price';
                return false;
            }
            return true;
        }

        salePriceInput.addEventListener('input', validatePrices);
        regularPriceInput.addEventListener('input', validatePrices);

        document.getElementById('productForm').addEventListener('submit', (e) => {
            if (!validatePrices()) e.preventDefault();
        });

        function confirmAddProduct() {
    Swal.fire({
      title: 'Are you sure?',
      text: 'Do you want to add this product?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonColor: '#3085d6',
      cancelButtonColor: '#d33',
      confirmButtonText: 'Yes, add it!',
      cancelButtonText: 'No, cancel'
    }).then((result) => {
      if (result.isConfirmed) {
        document.getElementById('addProductForm').submit();
      }
    });
  }

    </script>
</body>
</html>
<%- include("../../views/partials/admin/footer") %>