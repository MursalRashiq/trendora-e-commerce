<%- include("../../views/partials/user/header") %>
<head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick-theme.min.css">
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.8.1/slick.min.js"></script>

<style>
.product-details-wrapper {
    min-height: 100vh;
    background: #fff;
    padding: 40px 0;
}

.product-gallery {
    position: sticky;
    top: 20px;
    height: calc(100vh - 40px);
    overflow: hidden;
}

.main-image {
    width: 100%;
    height: 80vh;
    position: relative;
    overflow: hidden;
    border-radius: 8px;
    cursor: zoom-in;
}

.main-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s ease;
    cursor: zoom-in;
}

.thumbnail-container {
    display: flex;
    gap: 10px;
    margin-top: 20px;
    overflow-x: auto;
    scrollbar-width: none;
}

.thumbnail-container::-webkit-scrollbar {
    display: none;
}

.thumbnail {
    flex: 0 0 100px;
    height: 100px;
    border-radius: 4px;
    overflow: hidden;
    cursor: pointer;
    opacity: 0.7;
    transition: all 0.3s ease;
}

.thumbnail.active {
    opacity: 1;
    border: 2px solid #046963;
}

.thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.product-info {
    padding: 0 40px;
}

.product-category {
    font-size: 0.9rem;
    color: #666;
    text-transform: uppercase;
    letter-spacing: 2px;
    margin-bottom: 10px;
}

.product-name {
    font-size: 2.5rem;
    font-weight: 600;
    margin-bottom: 20px;
    color: #111;
}

.price-container {
    display: flex;
    align-items: baseline;
    gap: 15px;
    margin: 30px 0;
}

.current-price {
    font-size: 2rem;
    font-weight: 500;
}

.original-price {
    font-size: 1.2rem;
    color: #999;
    text-decoration: line-through;
}

.discount {
    font-size: 1rem;
    color: #D23F57;
    font-weight: 500;
}

.stock-info {
    font-size: 1rem;
    padding: 10px 0;
}

.stock-status {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 12px;
    border-radius: 6px;
    font-weight: 500;
}

.stock-status i {
    font-size: 1.1rem;
}

.stock-status.in-stock {
    color: #046963;
    background-color: rgba(4, 105, 99, 0.1);
}

.stock-status.low {
    color: #ff6b6b;
    background-color: rgba(255, 107, 107, 0.1);
}

.stock-status.out-of-stock {
    color: #e03131;
    background-color: rgba(224, 49, 49, 0.1);
}

.product-description {
    font-size: 1.1rem;
    line-height: 1.8;
    color: #555;
    margin: 30px 0;
    padding-bottom: 30px;
    border-bottom: 1px solid #eee;
}

.quantity-selector {
    display: flex;
    align-items: center;
    gap: 20px;
    margin: 30px 0;
}

.quantity-controls {
    display: flex;
    align-items: center;
    border: 1px solid #e5e5e5;
    border-radius: 5px;
    overflow: hidden;
    background: #fff;
}

.qty-btn {
    width: 50px; /* Increased size */
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #f5f5f5;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 20px; /* Larger symbols */
    font-weight: bold; /* Bolder symbols */
    color: #046963; /* Match theme color */
}

.qty-btn:hover {
    background: #046963;
    color: white;
}

.qty-input {
    width: 60px; /* Slightly larger input */
    height: 50px;
    text-align: center;
    font-size: 18px; /* Larger text */
    font-weight: 500;
    border: none;
    background: transparent;
    -moz-appearance: textfield;
}

.qty-input::-webkit-outer-spin-button,
.qty-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

.add-to-cart {
    flex: 1;
    height: 50px; /* Match quantity controls height */
    background: #046963;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
}

.add-to-cart:hover {
    background: #035750;
}

.add-to-cart:disabled {
    background: #cccccc;
    cursor: not-allowed;
}

.product-features {
    margin: 40px 0;
    padding: 30px;
    background: #f9f9f9;
    border-radius: 8px;
}

.feature-item {
    display: flex;
    align-items: center;
    gap: 15px;
    margin-bottom: 20px;
}

.feature-icon {
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: #fff;
    border-radius: 50%;
    box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.feature-text {
    font-size: 1rem;
    color: #333;
}

/* Responsive Design */
@media (max-width: 991px) {
    .product-gallery {
        position: relative;
        height: auto;
        margin-bottom: 40px;
    }

    .main-image {
        height: 50vh;
    }

    .thumbnail-container {
        justify-content: center; /* Center thumbnails */
    }

    .thumbnail {
        flex: 0 0 80px; /* Smaller thumbnails */
        height: 80px;
    }

    .product-info {
        padding: 0 20px;
    }
}

@media (max-width: 767px) {
    .product-details-wrapper {
        padding: 20px 10px; /* Reduced padding */
    }

    .main-image {
        height: 40vh; /* Smaller image */
    }

    .thumbnail {
        flex: 0 0 60px; /* Even smaller thumbnails */
        height: 60px;
    }

    .product-name {
        font-size: 1.8rem; /* Smaller title */
    }

    .price-container {
        flex-wrap: wrap; /* Wrap prices if needed */
        gap: 10px;
    }

    .current-price {
        font-size: 1.5rem;
    }

    .original-price {
        font-size: 1rem;
    }

    .discount {
        font-size: 0.9rem;
    }

    .quantity-selector {
        flex-direction: column; /* Stack vertically */
        gap: 15px;
    }

    .quantity-controls {
        width: 100%; /* Full width */
        max-width: 160px; /* Limit max width */
        margin: 0 auto;
    }

    .qty-btn {
        width: 40px; /* Slightly smaller for mobile */
        height: 40px;
        font-size: 18px;
    }

    .qty-input {
        width: 50px;
        height: 40px;
        font-size: 16px;
    }

    .add-to-cart {
        width: 100%;
        height: 40px;
    }

    .product-features {
        padding: 20px;
    }

    .feature-item {
        gap: 10px;
    }

    .feature-icon {
        width: 35px;
        height: 35px;
    }

    .feature-text {
        font-size: 0.9rem;
    }
}

@media (max-width: 576px) {
    .main-image {
        height: 30vh; /* Even smaller */
    }

    .thumbnail {
        flex: 0 0 50px;
        height: 50px;
    }

    .product-name {
        font-size: 1.5rem;
    }

    .product-description {
        font-size: 1rem;
    }
}

/* Breadcrumb styles */
.breadcrumb-wrap {
    padding: 20px 0;
    background: #f7f8f9;
    margin-bottom: 30px;
}

.breadcrumb {
    display: flex;
    align-items: center;
    gap: 10px;
    margin: 0;
    padding: 0;
    list-style: none;
    flex-wrap: wrap; /* Wrap on small screens */
}

.breadcrumb a {
    color: #046963;
    text-decoration: none;
    font-weight: 500;
    transition: color 0.3s ease;
}

.breadcrumb a:hover {
    color: #035750;
}

.breadcrumb span {
    color: #999;
    margin: 0 5px;
}

.breadcrumb span::before {
    content: '>';
    color: #999;
}

.breadcrumb i {
    margin-right: 5px;
}

/* Modal zoom styles remain unchanged for brevity */
.zoom-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.9);
    z-index: 1000;
    overflow: hidden;
}

.zoom-modal-content {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.zoom-modal-image {
    max-width: 90%;
    max-height: 90vh;
    object-fit: contain;
}

.zoom-modal-close {
    position: absolute;
    top: 20px;
    right: 20px;
    color: white;
    font-size: 30px;
    cursor: pointer;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transition: all 0.3s ease;
}

.zoom-modal-close:hover {
    background: rgba(255, 255, 255, 0.3);
}

.zoom-modal-thumbnails {
    position: absolute;
    bottom: 20px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 10px;
    background: rgba(255, 255, 255, 0.1);
    padding: 10px;
    border-radius: 10px;
}

.zoom-modal-thumbnail {
    width: 60px;
    height: 60px;
    border-radius: 5px;
    cursor: pointer;
    opacity: 0.6;
    transition: all 0.3s ease;
}

.zoom-modal-thumbnail.active {
    opacity: 1;
    border: 2px solid #046963;
}

.zoom-modal-thumbnail img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 3px;
}

@media (max-width: 768px) {
    .zoom-modal-thumbnails {
        bottom: 10px;
    }
    
    .zoom-modal-thumbnail {
        width: 40px;
        height: 40px;
    }
    
    .zoom-modal-close {
        top: 10px;
        right: 10px;
    }
}
</style>
</head>
<main class="main">
 <div class="page-header breadcrumb-wrap">
     <div class="container">
         <div class="breadcrumb">
             <a href="/" rel="nofollow"><i class="fi-rs-home"></i> Home</a>
             <span></span>
             <a href="/shop"><%= category.name %></a>
             <span></span>
             <%= product.productName %>
         </div>
     </div>
 </div>
 <section class="mt-50 mb-50">
     <div class="container">
         <div class="product-details-wrapper">
             <div class="row">
                 <div class="col-lg-7">
                     <div class="product-gallery">
                         <div class="main-image">
                             <div class="zoom-lens"></div>
                             <div class="zoom-result"></div>
                             <img src="<%= product.productImage[0] %>" 
                                  alt="<%= product.productName %>" 
                                  id="mainImage">
                         </div>
                         <div class="thumbnail-container">
                             <% product.productImage.forEach((image, index) => { %>
                                 <div class="thumbnail <%= index === 0 ? 'active' : '' %>" 
                                      onclick="updateMainImage(this, '<%= image %>')">
                                     <img src="<%= image %>" alt="Thumbnail">
                                 </div>
                             <% }); %>
                         </div>
                     </div>
                 </div>
                 
                 <div class="col-lg-5">
                     <div class="product-info">
                         <div class="product-category"><%= category.name %></div>
                         <h1 class="product-name"><%= product.productName %></h1>
                         
                         <div class="price-container">
                             <span class="current-price">₹<%= product.salePrice %></span>
                             <span class="original-price">₹<%= product.regularPrice %></span>
                             <% if(totalOffer) { %>
                                 <span class="discount">(<%= totalOffer %>% OFF)</span>
                             <% } %>
                         </div>
                         
                         <div class="stock-info">
                             <% if (product.quantity > 0) { %>
                                 <% if (product.quantity <= 10) { %>
                                     <div class="stock-status low">
                                         <i class="fi-rs-exclamation"></i>
                                         Only <%= product.quantity %> items left in stock - order soon
                                     </div>
                                 <% } else { %>
                                     <div class="stock-status in-stock">
                                         <i class="fi-rs-check"></i>
                                         In Stock (<%= product.quantity %> available)
                                     </div>
                                 <% } %>
                             <% } else { %>
                                 <div class="stock-status out-of-stock">
                                     <i class="fi-rs-cross"></i>
                                     Out of Stock
                                 </div>
                             <% } %>
                         </div>
                         
                         <p class="product-description"><%= product.description %></p>
                         
                         <div class="quantity-selector">
                            <div class="quantity-controls">
                                <button type="button" class="qty-btn minus">−</button>
                                <input type="text" class="qty-input" value="1" readonly>
                                <button type="button" class="qty-btn plus">+</button>
                            </div>
                             <button class="add-to-cart" 
                                     onclick="addToCart('<%= product._id %>')"
                                     <%= product.quantity === 0 ? 'disabled' : '' %>>
                                 <%= product.quantity === 0 ? 'Out of Stock' : 'Add to Cart' %>
                             </button>
                         </div>
                         
                         <div class="product-features">
                             <div class="feature-item">
                                 <div class="feature-icon">
                                     <i class="fi-rs-crown"></i>
                                 </div>
                                 <div class="feature-text">1 Year Brand Warranty</div>
                             </div>
                             <div class="feature-item">
                                 <div class="feature-icon">
                                     <i class="fi-rs-refresh"></i>
                                 </div>
                                 <div class="feature-text">7 Day Return Policy</div>
                             </div>
                             <% if (product.salePrice < 1000){%>
                             <div class="feature-item">
                                 <div class="feature-icon">
                                     <i class="fi-rs-credit-card"></i>
                                 </div>
                                 <div class="feature-text">Cash on Delivery Available</div>
                             </div>
                             <%}else{%>
                                <div class="feature-item">
                                    <div class="feature-icon">
                                        <i class="fi-rs-credit-card"></i>
                                    </div>
                                    <div class="feature-text">Cash on Delivery Not Available</div>
                                </div>
                                <%}%>
                         </div>
                     </div>
                 </div>
             </div>
         </div>
     </div>
 </section>
</main>

<!-- Add modal HTML after main content -->
<div class="zoom-modal" id="zoomModal">
    <div class="zoom-modal-content">
        <span class="zoom-modal-close">×</span>
        <img src="" alt="Zoomed Image" class="zoom-modal-image" id="zoomModalImage">
        <div class="zoom-modal-thumbnails">
            <% product.productImage.forEach((image, index) => { %>
                <div class="zoom-modal-thumbnail <%= index === 0 ? 'active' : '' %>" 
                     onclick="changeModalImage('<%= image %>', this)">
                    <img src="<%= image %>" alt="Thumbnail">
                </div>
            <% }); %>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
// Update main image function
function updateMainImage(thumbnail, imageUrl) {
    document.querySelectorAll('.thumbnail').forEach(thumb => thumb.classList.remove('active'));
    thumbnail.classList.add('active');
    const mainImage = document.getElementById('mainImage');
    mainImage.src = imageUrl;
    
    // Update modal image if open
    const modal = document.getElementById('zoomModal');
    if (modal.style.display === 'block') {
        document.getElementById('zoomModalImage').src = imageUrl;
    }
}

// Quantity control functionality
document.addEventListener('DOMContentLoaded', function() {
    const minusBtn = document.querySelector('.qty-btn.minus');
    const plusBtn = document.querySelector('.qty-btn.plus');
    const qtyInput = document.querySelector('.qty-input');
    const maxStock = <%= product.quantity %>;

    minusBtn.addEventListener('click', function() {
        let currentValue = parseInt(qtyInput.value);
        if (currentValue > 1) {
            qtyInput.value = currentValue - 1;
        }
    });

    plusBtn.addEventListener('click', function() {
        let currentValue = parseInt(qtyInput.value);
        if (currentValue < maxStock) {
            qtyInput.value = currentValue + 1;
        } else {
            Swal.fire({
                icon: 'warning',
                title: 'Stock Limit Reached',
                text: `Only ${maxStock} items available`,
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 2000
            });
        }
    });

    // Prevent manual input
    qtyInput.addEventListener('keydown', function(e) {
        e.preventDefault();
        return false;
    });
});

// Updated addToCart function
function addToCart(productId) {
    const quantityInput = document.querySelector('.qty-input');
    const requestedQuantity = parseInt(quantityInput.value);
    const availableStock = <%= product.quantity %>;

    if (requestedQuantity > availableStock) {
        Swal.fire({
            icon: 'error',
            title: 'Not Enough Stock',
            text: `Only ${availableStock} items available`,
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
        return;
    }

    $.ajax({
        url: '/addToCart',
        method: 'POST',
        data: { 
            productId: productId,
            quantity: requestedQuantity
        },
        success: function(response) {
            if (response.status === true) {
                $('#cartCount').text(response.cartLength);
                
                Swal.fire({
                    icon: 'success',
                    title: 'Added to Cart',
                    text: `${requestedQuantity} item${requestedQuantity > 1 ? 's' : ''} added successfully`,
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: response.message || 'Failed to add to cart',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            }
        },
        error: function(xhr, status, error) {
            console.error('AJAX Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Server Error',
                text: 'Failed to add to cart. Please try again.',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        }
    });
}

// Zoom functionality (unchanged for brevity, but included for completeness)
document.addEventListener('DOMContentLoaded', function() {
    const mainImageContainer = document.querySelector('.main-image');
    const mainImage = document.getElementById('mainImage');
    const lens = document.querySelector('.zoom-lens');
    const result = document.querySelector('.zoom-result');

    function getZoomRatio() {
        return result.offsetWidth / lens.offsetWidth;
    }

    function moveLens(e) {
        e.preventDefault();
        if (window.innerWidth <= 1200) return;

        const rect = mainImageContainer.getBoundingClientRect();
        let x = e.pageX - rect.left - window.pageXOffset;
        let y = e.pageY - rect.top - window.pageYOffset;

        const lensHalfWidth = lens.offsetWidth / 2;
        const lensHalfHeight = lens.offsetHeight / 2;

        x = Math.max(lensHalfWidth, Math.min(x, rect.width - lensHalfWidth));
        y = Math.max(lensHalfHeight, Math.min(y, rect.height - lensHalfHeight));

        lens.style.left = `${x - lensHalfWidth}px`;
        lens.style.top = `${y - lensHalfHeight}px`;

        const ratio = getZoomRatio();
        const bgX = (x - lensHalfWidth) * ratio;
        const bgY = (y - lensHalfHeight) * ratio;

        result.style.backgroundImage = `url('${mainImage.src}')`;
        result.style.backgroundSize = `${mainImage.width * ratio}px ${mainImage.height * ratio}px`;
        result.style.backgroundPosition = `-${bgX}px -${bgY}px`;
    }

    function showZoom() {
        if (window.innerWidth <= 1200) return;
        lens.style.display = 'block';
        result.style.display = 'block';
    }

    function hideZoom() {
        lens.style.display = 'none';
        result.style.display = 'none';
    }

    mainImageContainer.addEventListener('mousemove', moveLens);
    mainImageContainer.addEventListener('mouseenter', showZoom);
    mainImageContainer.addEventListener('mouseleave', hideZoom);
});

// Modal functionality (unchanged for brevity)
document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('zoomModal');
    const modalImg = document.getElementById('zoomModalImage');
    const mainImage = document.getElementById('mainImage');
    const closeBtn = document.querySelector('.zoom-modal-close');
    
    mainImage.addEventListener('click', function() {
        modal.style.display = 'block';
        modalImg.src = this.src;
        document.body.style.overflow = 'hidden';
    });
    
    closeBtn.addEventListener('click', function() {
        modal.style.display = 'none';
        document.body.style.overflow = 'auto';
    });
    
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }
    });
    
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && modal.style.display === 'block') {
            modal.style.display = 'none';
            document.body.style.overflow = 'auto';
        }
    });
});

function changeModalImage(imageUrl, thumbnail) {
    const modalImg = document.getElementById('zoomModalImage');
    modalImg.src = imageUrl;
    document.querySelectorAll('.zoom-modal-thumbnail').forEach(thumb => thumb.classList.remove('active'));
    thumbnail.classList.add('active');
}
</script>
<%- include("../../views/partials/user/footer") %>