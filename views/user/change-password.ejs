<%- include("../../views/partials/user/header") %>

<style>
.content-main {
    min-height: 100vh;
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    padding: 80px 0;
}

.card-login {
    max-width: 500px;
    margin: 0 auto;
    background: linear-gradient(145deg, #ffffff, #f8fafc);
    border-radius: 20px;
    box-shadow: 0 20px 40px rgba(4, 105, 99, 0.15);
    overflow: hidden;
    transition: transform 0.3s ease;
}

.card-login:hover {
    transform: translateY(-5px);
}

.card-header {
    background: linear-gradient(90deg, #046963, #03413c);
    padding: 35px;
    text-align: center;
    border: none;
    position: relative;
    overflow: hidden;
}

.card-header::after {
    content: '';
    position: absolute;
    bottom: -20px;
    left: 0;
    width: 100%;
    height: 40px;
    background: rgba(255, 255, 255, 0.1);
    transform: skewY(-3deg);
    animation: wave 3s infinite ease-in-out;
}

@keyframes wave {
    0%, 100% { transform: skewY(-3deg) translateY(0); }
    50% { transform: skewY(3deg) translateY(-10px); }
}

.card-title {
    color: white;
    font-size: 2.4rem;
    font-weight: 700;
    margin: 0;
    letter-spacing: 1.5px;
    text-transform: uppercase;
    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.card-body {
    padding: 45px;
}

.form-group {
    margin-bottom: 30px;
    position: relative;
}

.form-label {
    font-weight: 600;
    color: #046963;
    margin-bottom: 12px;
    display: block;
    font-size: 1rem;
    letter-spacing: 0.75px;
}

.input-group {
    position: relative;
}

.form-control {
    height: 60px;
    padding: 15px 50px 15px 20px;
    border: 2px solid #e9ecef;
    border-radius: 12px;
    font-size: 1.1rem;
    transition: all 0.3s ease;
    background: #f8f9fa;
    width: 100%;
    box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.05);
}

.form-control:focus {
    border-color: #046963;
    box-shadow: 0 0 0 0.25rem rgba(4, 105, 99, 0.2), 0 5px 15px rgba(4, 105, 99, 0.1);
    background: white;
}

.input-icon {
    position: absolute;
    right: 65px;
    top: 50%;
    transform: translateY(-50%);
    color: #046963;
    opacity: 0.8;
    font-size: 1.2rem;
    transition: all 0.3s ease;
}

.form-control:focus + .input-icon {
    opacity: 1;
    transform: translateY(-50%) scale(1.15);
}

.toggle-password {
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    color: #046963;
    opacity: 0.8;
    font-size: 1.2rem;
    cursor: pointer;
    transition: all 0.3s ease;
    background: none;
    border: none;
    padding: 0;
}

.toggle-password:hover, .toggle-password:focus {
    opacity: 1;
    transform: translateY(-50%) scale(1.15);
}

.btn-primary {
    width: 100%;
    height: 60px;
    background: linear-gradient(90deg, #046963, #035750);
    border: none;
    border-radius: 12px;
    color: white;
    font-weight: 700;
    font-size: 1.2rem;
    transition: all 0.3s ease;
    margin-top: 35px;
    letter-spacing: 1.5px;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    box-shadow: 0 5px 15px rgba(4, 105, 99, 0.2);
}

.btn-primary::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.6s ease, height 0.6s ease;
}

.btn-primary:hover::after {
    width: 300px;
    height: 300px;
}

.btn-primary:hover {
    background: #035750;
    transform: translateY(-3px);
    box-shadow: 0 10px 25px rgba(4, 105, 99, 0.4);
}

.btn-primary:active {
    transform: translateY(0);
}

.btn-secondary {
    width: 100%;
    height: 60px;
    background: linear-gradient(90deg, #6b7280, #4b5563);
    border: none;
    border-radius: 12px;
    color: white;
    font-weight: 700;
    font-size: 1.2rem;
    transition: all 0.3s ease;
    margin-top: 15px;
    letter-spacing: 1.5px;
    position: relative;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    box-shadow: 0 5px 15px rgba(107, 114, 128, 0.2);
    text-decoration: none;
}

.btn-secondary::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: width 0.6s ease, height 0.6s ease;
}

.btn-secondary:hover::after {
    width: 300px;
    height: 300px;
}

.btn-secondary:hover {
    background: #4b5563;
    transform: translateY(-3px);
    box-shadow: 0 10px 25px rgba(107, 114, 128, 0.4);
}

.btn-secondary:active {
    transform: translateY(0);
}

.form-group {
    opacity: 0;
    transform: translateY(25px);
    animation: fadeInUp 0.6s forwards;
}

.form-group:nth-child(2) { animation-delay: 0.2s; }
.form-group:nth-child(3) { animation-delay: 0.4s; }

@keyframes fadeInUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@media (max-width: 768px) {
    .content-main { padding: 60px 0; }
    .card-login { max-width: 480px; margin: 0 25px; }
    .card-header { padding: 30px; }
    .card-title { font-size: 2.2rem; }
    .card-body { padding: 35px; }
    .form-control { height: 55px; font-size: 1rem; }
    .input-icon { right: 60px; }
    .toggle-password { right: 20px; }
    .btn-primary, .btn-secondary { height: 55px; font-size: 1.1rem; }
}

@media (max-width: 576px) {
    .content-main { padding: 50px 0; }
    .card-login { max-width: 90%; margin: 0 20px; border-radius: 15px; }
    .card-header { padding: 25px; }
    .card-title { font-size: 2rem; }
    .card-body { padding: 30px; }
    .form-group { margin-bottom: 25px; }
    .form-label { font-size: 0.95rem; }
    .form-control { height: 50px; padding: 12px 45px 12px 15px; font-size: 0.95rem; }
    .input-icon { right: 55px; font-size: 1.1rem; }
    .toggle-password { right: 15px; font-size: 1.1rem; }
    .btn-primary, .btn-secondary { height: 50px; font-size: 1rem; margin-top: 25px; }
    .btn-secondary { margin-top: 15px; }
}

@media (max-width: 400px) {
    .card-login { max-width: 95%; margin: 0 10px; }
    .card-header { padding: 20px; }
    .card-title { font-size: 1.8rem; }
    .card-body { padding: 25px; }
    .form-control { height: 45px; font-size: 0.9rem; }
    .input-icon { right: 50px; font-size: 1rem; }
    .toggle-password { right: 10px; font-size: 1rem; }
    .btn-primary, .btn-secondary { height: 45px; font-size: 0.95rem; }
}
</style>

<div class="content-main">
    <div class="container">
        <div class="card-login">
            <div class="card-header">
                <h2 class="card-title">Change Password</h2>
            </div>
            <div class="card-body">
                <form id="changePasswordForm">
                    <div class="form-group">
                        <label class="form-label" for="currentPassword">Current Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="currentPassword" name="currentPassword" placeholder="Enter current password" required>
                            <i class="fas fa-lock input-icon"></i>
                            <button type="button" class="toggle-password" data-target="currentPassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="newPassword">New Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="newPassword" name="newPassword" placeholder="Enter new password" required>
                            <i class="fas fa-lock input-icon"></i>
                            <button type="button" class="toggle-password" data-target="newPassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label" for="confirmPassword">Confirm New Password</label>
                        <div class="input-group">
                            <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" placeholder="Confirm new password" required>
                            <i class="fas fa-check input-icon"></i>
                            <button type="button" class="toggle-password" data-target="confirmPassword">
                                <i class="fas fa-eye"></i>
                            </button>
                        </div>
                    </div>

                    <button type="submit" class="btn btn-primary">
                        Update Password
                        <i class="fas fa-arrow-right"></i>
                    </button>
                    <a href="/profile" class="btn btn-secondary">
                        Cancel
                        <i class="fas fa-times"></i>
                    </a>
                </form>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
// Password Toggle Functionality
document.querySelectorAll('.toggle-password').forEach(button => {
    button.addEventListener('click', function() {
        const targetId = this.getAttribute('data-target');
        const inputField = document.getElementById(targetId);
        const icon = this.querySelector('i');

        if (inputField.type === 'password') {
            inputField.type = 'text';
            icon.classList.remove('fa-eye');
            icon.classList.add('fa-eye-slash');
        } else {
            inputField.type = 'password';
            icon.classList.remove('fa-eye-slash');
            icon.classList.add('fa-eye');
        }
    });
});

// Form Submission Handler
document.getElementById('changePasswordForm').addEventListener('submit', function(event) {
    event.preventDefault();

    const currentPassword = document.getElementById('currentPassword').value;
    const newPassword = document.getElementById('newPassword').value;
    const confirmPassword = document.getElementById('confirmPassword').value;

    // Client-side validation
    if (!currentPassword || !newPassword || !confirmPassword) {
        Swal.fire({
            icon: 'error',
            title: 'All fields are required',
        });
        return;
    }

    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d).{8,}$/;
    if (!passwordRegex.test(newPassword)) {
        Swal.fire({
            icon: 'error',
            title: 'Invalid password',
            text: 'New password must be at least 8 characters long with letters and numbers',
        });
        return;
    }

    if (newPassword !== confirmPassword) {
        Swal.fire({
            icon: 'error',
            title: 'New passwords do not match',
        });
        return;
    }

    // AJAX request to server
    $.ajax({
        type: 'POST',
        url: '/change-password',
        data: {
            currentPassword: currentPassword,
            newPassword: newPassword,
            confirmNewPassword: confirmPassword
        },
        success: function(response) {
            if (response.success) {
                Swal.fire({
                    icon: 'success',
                    title: response.message, // "Password changed successfully."
                    showConfirmButton: false,
                    timer: 1500
                }).then(() => {
                    window.location.href = response.redirectUrl || '/profile';
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: response.message, // Use exact backend message
                });
            }
        },
        error: function(xhr) {
            let errorMessage = 'Failed to change the password. Please try again later.';
            if (xhr.responseJSON && xhr.responseJSON.message) {
                errorMessage = xhr.responseJSON.message; // Fallback to server message if available
            }
            Swal.fire({
                icon: 'error',
                title: errorMessage,
            });
        }
    });
});
</script>

<%- include("../../views/partials/user/footer") %>