<%- include("../../views/partials/user/header") %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
<link rel="stylesheet" href="/user-assets/css/maind134.css">
<style>
    /* Base Layout */
    .main-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 20px;
    }

    /* Top Bar */
    .shop-topbar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 8px;
    }

    /* Search Form */
    .search-form {
        flex: 0 1 300px;
        display: flex;
        gap: 10px;
    }

    .search-input {
        flex: 1;
        padding: 8px 15px;
        border: 1px solid #ddd;
        border-radius: 25px;
        outline: none;
    }

    .search-button {
        padding: 8px 20px;
        background-color: #1e918b;
        color: white;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    /* Sort Dropdown */
    .sort-section {
        margin-left: auto;
    }

    #sortDropdown {
        padding: 8px 15px;
        border: 1px solid #ddd;
        border-radius: 25px;
        background-color: white;
        cursor: pointer;
        min-width: 200px;
        outline: none;
        transition: all 0.3s ease;
    }

    #sortDropdown:hover {
        border-color: #9F78FF;
    }

    #sortDropdown:focus {
        border-color: #9F78FF;
        box-shadow: 0 0 0 2px rgba(159, 120, 255, 0.2);
    }

    #sortDropdown option {
        padding: 8px;
    }

    /* Main Content Layout */
    .product-list-container {
        display: grid;
        grid-template-columns: 250px 1fr;
        gap: 30px;
        margin-bottom: 30px;
    }

    /* Sidebar */
    .sidebar {
        background-color: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        height: fit-content;
    }

    .filter-section {
        margin-bottom: 25px;
    }

    .filter-section h3 {
        font-size: 18px;
        margin-bottom: 15px;
        color: #333;
        border-bottom: 2px solid #9F78FF;
        padding-bottom: 8px;
    }

    .filter-section ul {
        list-style: none;
        padding: 0;
    }

    .filter-section li {
        margin-bottom: 10px;
    }

    .filter-section a {
        text-decoration: none;
        transition: color 0.3s ease;
    }

    /* Product Grid */
    .product-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }

    .product-card {
        background: white;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
        display: flex;
        flex-direction: column;
    }

    .product-card:hover {
        transform: translateY(-5px);
    }

    .product-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
        border-radius: 8px;
        margin-bottom: 15px;
        transition: transform 0.3s ease;
    }

    .product-card img:hover {
        transform: scale(1.05);
    }

    .product-info {
        flex: 1;
        display: flex;
        flex-direction: column;
    }

    .product-title {
        font-size: 16px;
        margin: 10px 0;
        color: #333;
    }

    .product-price {
        font-size: 18px;
        color: #1e918b;
        margin: 10px 0;
    }

    .product-rating {
        display: flex;
        align-items: center;
        gap: 5px;
        margin: 10px 0;
        justify-content: center;
    }

    .add-to-cart-btn {
        width: 100%;
        padding: 10px;
        margin-top: auto;
        border: none;
        border-radius: 25px;
        background-color: #46698f;
        color: white;
        transition: background-color 0.3s ease;
    }

    .add-to-cart-btn:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }

    /* Pagination */
    .pagination {
        display: flex;
        justify-content: center;
        gap: 10px;
        margin-top: 30px;
    }

    .pagination a {
        padding: 8px 15px;
        border-radius: 25px;
        background-color: #f8f9fa;
        color: #333;
        text-decoration: none;
        transition: all 0.3s ease;
    }

    .pagination a.active {
        background-color: #9F78FF;
        color: white;
    }
    .wishlist-btn {
        width: 40px;
        height: 40px;
        border: none;
        border-radius: 50%;
        background-color: white;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        position: absolute;
        top: 15px;
        right: 15px;
        z-index: 10;
        transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        overflow: hidden;
    }

    .wishlist-btn:hover {
        transform: scale(1.1);
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.15);
    }

    .wishlist-btn:active {
        transform: scale(0.9);
    }

    .wishlist-btn i {
        font-size: 1.2rem;
        color: #ff4b6e;
        transition: all 0.3s ease;
    }

    .wishlist-btn.active i.bi-heart-fill {
        animation: heartBeat 0.3s forwards;
    }

    .wishlist-btn .bi-heart,
    .wishlist-btn .bi-heart-fill {
        position: absolute;
        transition: all 0.3s ease;
    }

    .wishlist-btn .bi-heart-fill {
        opacity: 0;
        transform: scale(0);
    }

    .wishlist-btn.active .bi-heart {
        opacity: 0;
        transform: scale(0);
    }

    .wishlist-btn.active .bi-heart-fill {
        opacity: 1;
        transform: scale(1);
    }

    /* Tooltip */
    .wishlist-btn::before {
        content: attr(data-tooltip);
        position: absolute;
        bottom: -35px;
        right: 0;
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 12px;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        white-space: nowrap;
    }

    .wishlist-btn:hover::before {
        opacity: 1;
        visibility: visible;
    }

    /* Heart Beat Animation */
    @keyframes heartBeat {
        0% {
            transform: scale(1);
        }
        25% {
            transform: scale(1.3);
        }
        50% {
            transform: scale(1);
        }
        75% {
            transform: scale(1.3);
        }
        100% {
            transform: scale(1);
        }
    }

    /* Product card positioning */
    .product-card {
        position: relative;
    }

    /* Success Animation */
    const style = document.createElement('style');
style.textContent = `
.wishlist-notification {
    position: fixed;
    top: 20px;
    right: 20px;
    padding: 15px 25px;
    border-radius: 4px;
    transform: translateX(150%);
    transition: transform 0.3s ease-in-out;
    z-index: 1000;
    display: none;
}

.wishlist-notification.show {
    transform: translateX(0);
    display: block;
}

.wishlist-notification.success {
    background-color: #4CAF50;
    color: white;
}

.wishlist-notification.error {
    background-color: #f44336;
    color: white;
}

.wishlist-notification.warning {
    background-color: #ff9800;
    color: white;
}

.wishlist-notification.info {
    background-color: #2196F3;
    color: white;
}

.wishlist-btn {
    cursor: pointer;
    transition: all 0.3s ease;
}

.wishlist-btn.active {
    color: red;
}

.wishlist-btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
}
    
</style>

<main class="main-container">
    <section class="shop-page">
        <div class="shop-topbar">
            <form action="/search" method="POST" class="search-form">
                <input type="text" name="query" placeholder="Search items..." class="search-input">
                <button type="submit" class="search-button">Search</button>
            </form>

            <div class="sort-section">
                <select id="sortDropdown" onchange="applySort(this.value)">
                    <option value="latest" <%= (typeof sortOption !== 'undefined' && sortOption === 'latest') ? 'selected' : '' %>>Latest</option>
                    <option value="lowToHigh" <%= (typeof sortOption !== 'undefined' && sortOption === 'lowToHigh') ? 'selected' : '' %>>Price: Low to High</option>
                    <option value="highToLow" <%= (typeof sortOption !== 'undefined' && sortOption === 'highToLow') ? 'selected' : '' %>>Price: High to Low</option>
                    <option value="aToZ" <%= (typeof sortOption !== 'undefined' && sortOption === 'aToZ') ? 'selected' : '' %>>Name: A to Z</option>
                    <option value="zToA" <%= (typeof sortOption !== 'undefined' && sortOption === 'zToA') ? 'selected' : '' %>>Name: Z to A</option>
                </select>
            </div>
          

        </div>

        <div class="product-list-container">
            <aside class="sidebar">
                <div class="filter-section">
                    <h3>Categories</h3>
                    <ul>
                        <% for (let i = 0; i < category.length; i++) { %>
                            <li>
                                <a href="/filter?category=<%= category[i]._id %>&sort=<%= typeof sortOption !== 'undefined' ? sortOption : 'latest' %>">
                                    <%= category[i].name %>
                                </a>
                            </li>
                        <% } %>
                    </ul>
                </div>

                <div class="filter-section">
                    <h3>Brands</h3>
                    <ul>
                        <% for (let i = 0; i < brand.length; i++) { %>
                            <li>
                                <a href="/filter?brand=<%= brand[i]._id %>&sort=<%= typeof sortOption !== 'undefined' ? sortOption : 'latest' %>"><%= brand[i].brandName %></a>
                            </li>
                        <% } %>
                    </ul>
                </div>

                <div class="filter-section">
                    <h3>Price Range</h3>
                    <ul>
                        <li><a href="/filterPrice?gt=0&lt=500&sort=<%= typeof sortOption !== 'undefined' ? sortOption : 'latest' %>">Under ₹500</a></li>
                        <li><a href="/filterPrice?gt=500&lt=1000&sort=<%= typeof sortOption !== 'undefined' ? sortOption : 'latest' %>">₹500 - ₹1000</a></li>
                        <li><a href="/filterPrice?gt=1000&lt=1500&sort=<%= typeof sortOption !== 'undefined' ? sortOption : 'latest' %>">₹1000 - ₹1500</a></li>
                        <li><a href="/filterPrice?gt=1500&lt=1000000&sort=<%= typeof sortOption !== 'undefined' ? sortOption : 'latest' %>">Above ₹1500</a></li>
                    </ul>
                </div>
            </aside>

            <main class="product-grid">
                <% products.forEach((product) => { %>
                    <div class="product-card">
                        <!-- Wishlist button -->
                        <button 
                        class="wishlist-btn"
                        onclick="toggleWishlist(this, '<%= product._id %>')"
                        data-tooltip="Add to Wishlist"
                        data-product-id="<%= product._id %>"
                    >
                        <i class="bi bi-heart"></i>
                        <i class="bi bi-heart-fill"></i>
                    </button>
                        <!-- Product link and image -->
                        <a href="/productDetails?id=<%= product._id %>">
                            <% if (product.productImage && product.productImage.length > 0) { %>
                                <img src="<%= product.productImage[0] %>" 
                                     alt="<%= product.productName %>"
                                     onerror="this.src='/assets/img/no-image.jpg'"
                                     loading="lazy"
                                >
                            <% } else { %>
                                <img src="/assets/img/no-image.jpg" 
                                     alt="No Image Available"
                                     loading="lazy"
                                >
                            <% } %>
                            
                            <div class="product-info">
                                <h4 class="product-title"><%= product.productName %></h4>
                                <p>Brand: <%= product.brand || 'Unknown Brand' %></p>
                                <p><%= product.description || 'Description not available' %></p>
                                <p class="product-price">
                                    ₹<%= product.salePrice ? product.salePrice.toLocaleString('en-IN') : 'N/A' %>
                                    <span class="text-muted">
                                        <strike>
                                            ₹<%= product.regularPrice ? product.regularPrice.toLocaleString('en-IN') : 'N/A' %>
                                        </strike>
                                    </span>
                                </p>
                                
                                <div class="product-rating">
                                    <% for (let i = 1; i <= 4; i++) { %>
                                        <span class="fa fa-star <%= i <= product.rating ? 'checked' : '' %>"></span>
                                    <% } %>
                                    <span class="fa fa-star" style="color: #e2dbc3;"></span>
                                    <span class="review-count">(reviews)</span>
                                </div>
                            </div>
                        </a>
                        
                        <!-- Add to cart button -->
                        <button 
                            onclick="addToCart('<%= product._id %>')" 
                            class="add-to-cart-btn"
                            data-product-id="<%= product._id %>"
                            <%= product.quantity <= 0 ? 'disabled' : '' %>
                        >
                            <i class="fa fa-shopping-cart"></i> 
                            <%= product.quantity <= 0 ? 'Out of Stock' : 'Go to Cart' %>
                        </button>
                    </div>
                <% }); %>
            </main>
            
            <!-- Success notification (Move this outside the product grid, just before closing main-container) -->
            <div class="wishlist-success">
                <i class="bi bi-check-circle"></i>
                <span class="success-message"></span>
            </div>
        </div>

        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>&sort=<%= typeof sortOption !== 'undefined' ? sortOption : 'latest' %>">Prev</a>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>&sort=<%= typeof sortOption !== 'undefined' ? sortOption : 'latest' %>" 
                   class="<%= currentPage === i ? 'active' : '' %>">
                    <%= i %>
                </a>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>&sort=<%= typeof sortOption !== 'undefined' ? sortOption : 'latest' %>">Next</a>
            <% } %>
        </div>
    </section>
</main>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<!-- <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script> -->
<script>
  function addToCart(productId) {
    $.ajax({
        url: '/addToCart',
        method: 'POST',
        data: { productId: productId },
        success: function(response) {
            if (response.status === true) {
                // Update cart count
                $('#cartCount').text(response.cartLength);
                
                Swal.fire({
                    icon: 'success',
                    title: 'Added to Cart',
                    text: 'Product successfully added',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 1500
                });
            } else if (response.status === "Out of stock") {
                Swal.fire({
                    icon: 'warning',
                    title: 'Out of Stock',
                    text: 'Cannot add more items',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
            } else if (response.status === "Product not found") {
                Swal.fire({
                    icon: 'error',
                    title: 'Product Not Found',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 2000
                });
            }
        },
        error: function() {
            Swal.fire({
                icon: 'error',
                title: 'Failed to add to cart',
                toast: true,
                position: 'top-end'
            });
        }
    });
}


function toggleWishlist(button, productId) {
    const isActive = button.classList.toggle('active');
    const tooltip = button.getAttribute('data-tooltip');

    // Update tooltip text
    button.setAttribute('data-tooltip', 
        isActive ? 'Remove from Wishlist' : 'Add to Wishlist'
    );

    $.ajax({
        url: '/addTOWishlist',
        method: 'POST',
        data: { productId: productId },
        success: function(response) {
            if (response.status) {
                Swal.fire({
                    icon: 'success',
                    title: response.message || 'Added to wishlist!',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                Swal.fire({
                    icon: 'info',
                    title: response.message || 'Product already in wishlist',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 1500
                });
                // Revert the active state if product was already in wishlist
                button.classList.toggle('active');
            }
        },
        error: function() {
            Swal.fire({
                icon: 'error',
                title: 'Failed to update wishlist',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 1500
            });
            // Revert the active state on error
            button.classList.toggle('active');
        }
    });
}

// Optional: Add wishlist count to header
function updateWishlistCount() {
    const wishlistCount = document.querySelectorAll('.wishlist-btn.active').length;
    const countElement = document.querySelector('.wishlist-count');
    if (countElement) {
        countElement.textContent = wishlistCount;
        countElement.style.display = wishlistCount > 0 ? 'block' : 'none';
    }
}


function applySort(sortValue) {
    const currentUrl = new URL(window.location.href);
    currentUrl.searchParams.set('sort', sortValue);
    currentUrl.searchParams.set('page', '1'); // Reset to first page when sorting
    window.location.href = currentUrl.toString();
}



  document.addEventListener('DOMContentLoaded', function() {
    // Set default sort value if none exists
    const urlParams = new URLSearchParams(window.location.search);
    const currentSort = urlParams.get('sort') || 'latest';
    
    // Set the dropdown value
    const sortDropdown = document.getElementById('sortDropdown');
    if (sortDropdown) {
        sortDropdown.value = currentSort;
    }
});

// Update the filter links to include current sort
function updateFilterLinks() {
    const currentSort = new URLSearchParams(window.location.search).get('sort') || 'latest';
    document.querySelectorAll('[data-filter-link]').forEach(link => {
        const url = new URL(link.href);
        url.searchParams.set('sort', currentSort);
        link.href = url.toString();
    });
}

// Call this when page loads
document.addEventListener('DOMContentLoaded', updateFilterLinks);

// Add this to handle image loading errors
document.addEventListener('DOMContentLoaded', function() {
    const images = document.querySelectorAll('.product-card img');
    images.forEach(img => {
        img.onerror = function() {
            this.src = '/assets/img/no-image.jpg';
            this.alt = 'Image not available';
        };
    });
});

// Optional: Add lazy loading with intersection observer
document.addEventListener('DOMContentLoaded', function() {
    if ('IntersectionObserver' in window) {
        const imageObserver = new IntersectionObserver((entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const img = entry.target;
                    img.src = img.dataset.src;
                    img.classList.remove('lazy');
                    observer.unobserve(img);
                }
            });
        });

        const imgs = document.querySelectorAll('img.lazy');
        imgs.forEach(img => imageObserver.observe(img));
    }
});
</script>
<%- include("../../views/partials/user/footer") %>



