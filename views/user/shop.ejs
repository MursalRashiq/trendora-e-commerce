<%- include("../../views/partials/user/header") %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<style>
    /* Base Layout */
    .main-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 1rem;
        width: 100%;
        box-sizing: border-box;
        position: relative;
    }

    /* Top Bar */
    .shop-topbar {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        padding: 1rem;
        background-color: #f8f9fa;
        border-radius: 8px;
        gap: 1rem;
    }

    /* Filter Button */
    .filter-btn {
        padding: 0.5rem 1rem;
        background-color: #9F78FF;
        color: white;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        font-size: 1rem;
        transition: background-color 0.3s ease;
    }

    .filter-btn:hover {
        background-color: #8a66eb;
    }

    /* Search Form */
    .search-form {
        flex: 1;
        display: flex;
        gap: 0.5rem;
        min-width: 200px;
    }

    .search-input {
        flex: 1;
        padding: 0.6rem 1.2rem;
        border: 1px solid #ddd;
        border-radius: 25px;
        outline: none;
        font-size: 1rem;
    }

    .search-button {
        padding: 0.6rem 1.2rem;
        background-color: #1e918b;
        color: white;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 1rem;
    }

    /* Sort Dropdown */
    .sort-section {
        flex: 0 1 auto;
    }

    #sortDropdown {
        padding: 0.6rem 2rem 0.6rem 1rem;
        border: 1px solid #ddd;
        border-radius: 25px;
        background-color: white;
        cursor: pointer;
        width: 100%;
        max-width: 200px;
        outline: none;
        font-size: 1rem;
        transition: all 0.3s ease;
        appearance: none;
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 24 24"><path fill="%23333" d="M7 10l5 5 5-5z"/></svg>');
        background-repeat: no-repeat;
        background-position: right 0.75rem center;
        background-size: 12px;
    }

    #sortDropdown:hover {
        border-color: #9F78FF;
    }

    /* Filter Modal */
    .filter-modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 50%;
        max-width: 300px;
        height: 100%;
        background-color: white;
        box-shadow: 2px 0 10px rgba(0,0,0,0.2);
        z-index: 1000;
        padding: 1.5rem;
        overflow-y: auto;
        transform: translateX(-100%);
        transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    .filter-modal.show {
        display: block;
        transform: translateX(0);
    }

    .filter-modal .close-btn {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: none;
        border: none;
        font-size: 1.5rem;
        cursor: pointer;
        color: #666;
    }

    /* Overlay */
    .modal-overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        z-index: 999;
        opacity: 0;
        transition: opacity 0.4s ease;
    }

    .modal-overlay.show {
        display: block;
        opacity: 1;
    }

    /* Filter Section */
    .filter-section {
        margin-bottom: 1.5rem;
    }

    .filter-section h3 {
        font-size: 1.2rem;
        margin-bottom: 1rem;
        color: #333;
        border-bottom: 2px solid #9F78FF;
        padding-bottom: 0.5rem;
    }

    .filter-section ul {
        list-style: none;
        padding: 0;
    }

    .filter-section li {
        margin-bottom: 0.75rem;
    }

    .filter-checkbox {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        cursor: pointer;
        font-size: 1rem;
    }

    .filter-checkbox input[type="checkbox"] {
        cursor: pointer;
        width: 1rem;
        height: 1rem;
        accent-color: #9F78FF;
    }

    /* Product Grid */
    .product-grid {
        display: grid;
        gap: 1rem;
        width: 100%;
    }

    @media (min-width: 769px) {
        .product-grid {
            grid-template-columns: repeat(4, minmax(180px, 1fr)); /* Decreased width with minmax */
        }
    }

    .product-card {
        background: white;
        border-radius: 8px;
        padding: 1rem;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        transition: transform 0.3s ease;
        display: flex;
        flex-direction: column;
        position: relative;
    }

    .product-card:hover {
        transform: translateY(-5px);
    }

    .product-card img {
        width: 100%;
        height: 150px;
        object-fit: cover;
        border-radius: 8px;
        margin-bottom: 1rem;
    }

    .product-info {
        flex: 1;
    }

    .product-title {
        font-size: 1.2rem;
        margin: 0.5rem 0;
        color: #333;
        text-decoration: none;
    }

    .product-price {
        font-size: 1.3rem;
        color: #1e918b;
        margin: 0.5rem 0;
    }

    .product-rating {
        display: flex;
        align-items: center;
        gap: 0.3rem;
        margin: 0.5rem 0;
    }

    .add-to-cart-btn {
        width: 100%;
        padding: 0.8rem;
        margin-top: auto;
        border: none;
        border-radius: 25px;
        background-color: #46698f;
        color: white;
        font-size: 1rem;
        transition: background-color 0.3s ease;
    }

    .add-to-cart-btn:disabled {
        background-color: #ccc;
        cursor: not-allowed;
    }

    /* Pagination */
    .pagination {
        display: flex;
        justify-content: center;
        gap: 0.5rem;
        margin-top: 1.5rem;
        flex-wrap: wrap;
    }

    .pagination a {
        padding: 0.5rem 1rem;
        border-radius: 25px;
        background-color: #f8f9fa;
        color: #333;
        text-decoration: none;
        transition: all 0.3s ease;
        font-size: 1rem;
    }

    .pagination a.active {
        background-color: #9F78FF;
        color: white;
    }

    /* Wishlist Button */
    .wishlist-btn {
        width: 2rem;
        height: 2rem;
        border: none;
        border-radius: 50%;
        background-color: white;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
        position: absolute;
        top: 0.75rem;
        right: 0.75rem;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
    }

    .wishlist-btn i {
        font-size: 1rem;
        color: #ff4b6e;
    }

    .wishlist-btn.active .bi-heart {
        display: none;
    }

    .wishlist-btn .bi-heart-fill {
        display: none;
    }

    .wishlist-btn.active .bi-heart-fill {
        display: block;
    }

    .wishlist-btn:hover::before {
        opacity: 1;
        visibility: visible;
    }

    .wishlist-btn::before {
        content: attr(data-tooltip);
        position: absolute;
        bottom: -2rem;
        background-color: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 0.3rem 0.6rem;
        border-radius: 4px;
        font-size: 0.8rem;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
    }

    .wishlist-notification {
        position: fixed;
        top: 1rem;
        right: 1rem;
        padding: 0.75rem 1.5rem;
        border-radius: 4px;
        transform: translateX(150%);
        transition: transform 0.3s ease-in-out;
        z-index: 1000;
        display: none;
        font-size: 0.9rem;
    }

    .wishlist-notification.show {
        transform: translateX(0);
        display: block;
    }

    .wishlist-notification.success {
        background-color: #4CAF50;
        color: white;
    }

    /* Filter Actions */
    .filter-actions {
        display: flex;
        gap: 0.5rem;
    }

    .apply-filter-btn, .clear-filter-btn {
        padding: 0.6rem 1rem;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 1rem;
    }

    .apply-filter-btn {
        background-color: #9F78FF;
        color: white;
        flex: 2;
    }

    .clear-filter-btn {
        background-color: #f8f9fa;
        color: #666;
        border: 1px solid #ddd;
        flex: 1;
    }

    /* Active Filters */
    .active-filters {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
        margin: 1rem 0;
        padding: 0.5rem;
        background-color: #f8f9fa;
        border-radius: 8px;
    }

    .filter-tag {
        display: inline-flex;
        align-items: center;
        gap: 0.3rem;
        padding: 0.3rem 0.6rem;
        background-color: #e5e1ff;
        border-radius: 20px;
        font-size: 0.9rem;
    }

    .filter-tag .remove-filter {
        cursor: pointer;
        font-size: 1rem;
        color: #666;
    }

    /* Offer Badge */
    .offer-badge {
        position: fixed;
        top: 25%; /* Start at 25% from top */
        left: 0;
        height: 50%; /* Take half the vertical area */
        width: 60px; /* Increased width for better text fit */
        background: linear-gradient(135deg, #ff4b6e, #9F78FF);
        color: white;
        padding: 1rem 0.5rem;
        border-radius: 0 12px 12px 0;
        writing-mode: vertical-rl;
        text-orientation: mixed;
        font-size: 1.4rem; /* Increased for visibility */
        font-weight: 700;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.2);
        z-index: 1001;
        display: flex;
        align-items: center;
        justify-content: center;
        animation: pulse 2s infinite ease-in-out;
    }

    @keyframes pulse {
        0% { transform: scale(1); }
        50% { transform: scale(1.05); }
        100% { transform: scale(1); }
    }

    /* Responsive Design */
    @media (min-width: 769px) {
        .search-form {
            max-width: 300px;
        }
        .offer-badge {
            display: block; /* Show offer badge in laptop view */
        }
    }

    @media (max-width: 768px) {
        .shop-topbar {
            flex-direction: column;
            align-items: stretch;
        }

        .search-form {
            width: 100%;
            margin-bottom: 1rem;
        }

        .filter-btn {
            padding: 0.4rem 0.8rem;
            font-size: 0.9rem;
        }

        #sortDropdown {
            max-width: 100%;
        }

        .filter-modal {
            width: 80%;
            max-width: none;
        }

        .product-grid {
            grid-template-columns: repeat(2, 1fr);
        }

        .product-card img {
            height: 120px;
        }

        .product-title {
            font-size: 1.1rem;
        }

        .product-price {
            font-size: 1.2rem;
        }

        .offer-badge {
            display: none; /* Hide offer badge in mobile view */
        }
    }

    @media (max-width: 480px) {
        .main-container {
            padding: 0.5rem;
        }

        .search-input, .search-button {
            font-size: 0.9rem;
        }

        .product-card {
            padding: 0.75rem;
        }

        .product-card img {
            height: 100px;
        }

        .add-to-cart-btn {
            font-size: 0.9rem;
            padding: 0.6rem;
        }

        .pagination a {
            padding: 0.4rem 0.8rem;
            font-size: 0.9rem;
        }
    }

    /* Remove underline from product links */
    .product-card a {
        text-decoration: none;
    }
</style>

<script>
    var activeFilters = <%- typeof activeFilters !== 'undefined' ? JSON.stringify(activeFilters) : JSON.stringify({ category: [], brand: [], price: [] }) %>;
</script>

<main class="main-container">
    <section class="shop-page">
        <div class="shop-topbar">
            <button class="filter-btn" onclick="toggleFilterModal()">Filters</button>
            <form action="/search" method="GET" class="search-form" onsubmit="saveSearchQuery()">
                <input type="text" name="query" placeholder="Search items..." class="search-input" value="<%= query || '' %>">
                <button type="submit" class="search-button">Search</button>
            </form>
            <div class="sort-section">
                <select id="sortDropdown" onchange="applySort(this.value)">
                    <option value="latest" <%= sortOption === 'latest' ? 'selected' : '' %>>Latest</option>
                    <option value="lowToHigh" <%= sortOption === 'lowToHigh' ? 'selected' : '' %>>Price: Low to High</option>
                    <option value="highToLow" <%= sortOption === 'highToLow' ? 'selected' : '' %>>Price: High to Low</option>
                    <option value="aToZ" <%= sortOption === 'aToZ' ? 'selected' : '' %>>Name: A to Z</option>
                    <option value="zToA" <%= sortOption === 'zToA' ? 'selected' : '' %>>Name: Z to A</option>
                </select>
            </div>
        </div>

        <div class="active-filters">
            <% const checkedFilters = activeFilters.category.concat(activeFilters.brand, activeFilters.price); %>
            <% checkedFilters.forEach(filter => { %>
                <% let filterType, filterValue; %>
                <% if (activeFilters.category.includes(filter)) { filterType = 'category'; filterValue = category.find(c => c._id.toString() === filter)?.name || filter; } %>
                <% if (activeFilters.brand.includes(filter)) { filterType = 'brand'; filterValue = brand.find(b => b._id.toString() === filter)?.brandName || filter; } %>
                <% if (activeFilters.price.includes(filter)) { filterType = 'price'; filterValue = filter === '0-500' ? 'Under ₹500' : filter === '500-1000' ? '₹500 - ₹1000' : filter === '1000-1500' ? '₹1000 - ₹1500' : 'Above ₹1500'; } %>
                <span class="filter-tag">
                    <%= filterValue %>
                    <span class="remove-filter" data-filter-type="<%= filterType %>" data-filter-value="<%= filter %>">×</span>
                </span>
            <% }); %>
        </div>

        <div class="product-grid">
            <% products.forEach((product) => { %>
                <div class="product-card">
                    <button 
                        class="wishlist-btn"
                        onclick="toggleWishlist(this, '<%= product._id %>')"
                        data-tooltip="Add to Wishlist"
                        data-product-id="<%= product._id %>"
                    >
                        <i class="bi bi-heart"></i>
                        <i class="bi bi-heart-fill"></i>
                    </button>
                    <a href="/productDetails?id=<%= product._id %>">
                        <% if (product.productImage && product.productImage.length > 0) { %>
                            <img src="<%= product.productImage[0] %>" 
                                 alt="<%= product.productName %>"
                                 onerror="this.src='/assets/img/no-image.jpg'"
                                 loading="lazy">
                        <% } else { %>
                            <img src="/assets/img/no-image.jpg" 
                                 alt="No Image Available"
                                 loading="lazy">
                        <% } %>
                        <div class="product-info">
                            <h4 class="product-title"><%= product.productName %></h4>
                            <p>Brand: <%= product.brand || 'Unknown Brand' %></p>
                            <p><%= product.description || 'Description not available' %></p>
                            <p class="product-price">
                                ₹<%= product.salePrice ? product.salePrice.toLocaleString('en-IN') : 'N/A' %>
                                <span class="text-muted">
                                    <strike>
                                        ₹<%= product.regularPrice ? product.regularPrice.toLocaleString('en-IN') : 'N/A' %>
                                    </strike>
                                </span>
                            </p>
                            <div class="product-rating">
                                <% for (let i = 1; i <= 4; i++) { %>
                                    <span class="fa fa-star <%= i <= (product.rating || 0) ? 'checked' : '' %>"></span>
                                <% } %>
                                <span class="fa fa-star" style="color: #e2dbc3;"></span>
                                <span class="review-count">(reviews)</span>
                            </div>
                        </div>
                    </a>
                    <button 
                        onclick="addToCart('<%= product._id %>')" 
                        class="add-to-cart-btn"
                        data-product-id="<%= product._id %>"
                        <%= product.quantity <= 0 ? 'disabled' : '' %>
                    >
                        <i class="fa fa-shopping-cart"></i> 
                        <%= product.quantity <= 0 ? 'Out of Stock' : 'Go to Cart' %>
                    </button>
                </div>
            <% }); %>
        </div>

        <div class="pagination">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>&sort=<%= sortOption || 'latest' %>">Prev</a>
            <% } %>
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>&sort=<%= sortOption || 'latest' %>" 
                   class="<%= currentPage === i ? 'active' : '' %>">
                    <%= i %>
                </a>
            <% } %>
            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>&sort=<%= sortOption || 'latest' %>">Next</a>
            <% } %>
        </div>

        <!-- Filter Modal -->
        <div class="filter-modal" id="filterModal">
            <button class="close-btn" onclick="toggleFilterModal()">×</button>
            <form id="filterForm" action="/filter" method="GET">
                <input type="hidden" name="sort" value="<%= sortOption || 'latest' %>">
                <div class="filter-section">
                    <h3>Categories</h3>
                    <ul>
                        <% for (let i = 0; i < category.length; i++) { %>
                            <li>
                                <label class="filter-checkbox">
                                    <input type="checkbox" name="category" value="<%= category[i]._id %>"
                                        <%= activeFilters.category.includes(category[i]._id.toString()) ? 'checked' : '' %>>
                                    <%= category[i].name %>
                                </label>
                            </li>
                        <% } %>
                    </ul>
                </div>
                <div class="filter-section">
                    <h3>Brands</h3>
                    <ul>
                        <% for (let i = 0; i < brand.length; i++) { %>
                            <li>
                                <label class="filter-checkbox">
                                    <input type="checkbox" name="brand" value="<%= brand[i]._id %>"
                                        <%= activeFilters.brand.includes(brand[i]._id.toString()) ? 'checked' : '' %>>
                                    <%= brand[i].brandName %>
                                </label>
                            </li>
                        <% } %>
                    </ul>
                </div>
                <div class="filter-section">
                    <h3>Price Range</h3>
                    <ul>
                        <li>
                            <label class="filter-checkbox">
                                <input type="checkbox" name="price" value="0-500"
                                    <%= activeFilters.price.includes('0-500') ? 'checked' : '' %>>
                                Under ₹500
                            </label>
                        </li>
                        <li>
                            <label class="filter-checkbox">
                                <input type="checkbox" name="price" value="500-1000"
                                    <%= activeFilters.price.includes('500-1000') ? 'checked' : '' %>>
                                ₹500 - ₹1000
                            </label>
                        </li>
                        <li>
                            <label class="filter-checkbox">
                                <input type="checkbox" name="price" value="1000-1500"
                                    <%= activeFilters.price.includes('1000-1500') ? 'checked' : '' %>>
                                ₹1000 - ₹1500
                            </label>
                        </li>
                        <li>
                            <label class="filter-checkbox">
                                <input type="checkbox" name="price" value="1500-1000000"
                                    <%= activeFilters.price.includes('1500-1000000') ? 'checked' : '' %>>
                                Above ₹1500
                            </label>
                        </li>
                    </ul>
                </div>
                <div class="filter-actions">
                    <button type="submit" class="apply-filter-btn">Apply Filters</button>
                    <button type="button" class="clear-filter-btn" onclick="clearFilters()">Clear All</button>
                </div>
            </form>
        </div>

        <!-- Modal Overlay -->
        <div class="modal-overlay" id="modalOverlay" onclick="toggleFilterModal()"></div>

        <!-- Wishlist Notification -->
        <div class="wishlist-notification">
            <i class="bi bi-check-circle"></i>
            <span class="success-message"></span>
        </div>

        <!-- Offer Badge -->
        <div class="offer-badge">Unlock Epic Deals Now!</div>
    </section>
</main>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.0/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    const sessionFlashMessage = <%- JSON.stringify(session.flashMessage || null) %>;

    function toggleFilterModal() {
        const modal = document.getElementById('filterModal');
        const overlay = document.getElementById('modalOverlay');
        modal.classList.toggle('show');
        overlay.classList.toggle('show');
    }

    function applySort(value) {
        const currentUrl = new URL(window.location.href);
        currentUrl.searchParams.set('sort', value);
        currentUrl.searchParams.set('page', '1');
        window.location.href = currentUrl.toString();
    }

    function clearFilters() {
        document.querySelectorAll('#filterForm input[type="checkbox"]').forEach(checkbox => {
            checkbox.checked = false;
        });
        document.getElementById('filterForm').submit();
    }

    function toggleWishlist(button, productId) {
        const isActive = button.classList.toggle('active');
        button.setAttribute('data-tooltip', isActive ? 'Remove from Wishlist' : 'Add to Wishlist');

        $.ajax({
            url: '/addTOWishlist',
            method: 'POST',
            data: { productId: productId },
            success: function(response) {
                if (response.status) {
                    Swal.fire({
                        icon: 'success',
                        title: response.message || 'Added to wishlist!',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else {
                    Swal.fire({
                        icon: 'info',
                        title: response.message || 'Product already in wishlist',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 1500
                    });
                    button.classList.toggle('active');
                }
            },
            error: function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Failed to update wishlist',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 1500
                });
                button.classList.toggle('active');
            }
        });
    }

    function addToCart(productId) {
        $.ajax({
            url: '/addToCart',
            method: 'POST',
            data: { productId: productId },
            success: function(response) {
                if (response.status === true) {
                    $('#cartCount').text(response.cartLength);
                    Swal.fire({
                        icon: 'success',
                        title: 'Added to Cart',
                        text: 'Product successfully added',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 1500
                    });
                } else if (response.status === "Out of stock") {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Out of Stock',
                        text: 'Cannot add more items',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000
                    });
                } else if (response.status === "Product not found") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Product Not Found',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 2000
                    });
                }
            },
            error: function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Failed to add to cart',
                    toast: true,
                    position: 'top-end'
                });
            }
        });
    }

    function saveSearchQuery() {
        const query = document.querySelector('.search-input').value;
        localStorage.setItem('lastSearchQuery', query);
    }

    document.addEventListener('DOMContentLoaded', function() {
        console.log('activeFilters:', activeFilters);

        const urlParams = new URLSearchParams(window.location.search);
        const currentSort = urlParams.get('sort') || 'latest';
        const sortDropdown = document.getElementById('sortDropdown');
        if (sortDropdown) {
            sortDropdown.value = currentSort;
        }

        const images = document.querySelectorAll('.product-card img');
        images.forEach(img => {
            img.onerror = function() {
                this.src = '/assets/img/no-image.jpg';
                this.alt = 'Image not available';
            };
        });

        document.querySelectorAll('.remove-filter').forEach(button => {
            button.addEventListener('click', function() {
                const filterType = this.dataset.filterType;
                const filterValue = this.dataset.filterValue;
                const checkbox = document.querySelector(`#filterForm input[name="${filterType}"][value="${filterValue}"]`);
                if (checkbox) {
                    checkbox.checked = false;
                }
                document.getElementById('filterForm').submit();
            });
        });

        if (sessionFlashMessage) {
            Swal.fire({
                icon: 'warning',
                title: sessionFlashMessage,
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 2000,
                timerProgressBar: true
            });
        }
    });

    window.addEventListener("pageshow", function(event) {
        if (event.persisted) {
            document.querySelector(".search-input").value = "";
        }
    });
</script>

<%- include("../../views/partials/user/footer") %>